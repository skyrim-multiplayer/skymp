import React, { useMemo, useState, useEffect } from 'react';
import heart5 from '../../../../img/dices/heart5.svg';
import heart4 from '../../../../img/dices/heart4.svg';
import heart3 from '../../../../img/dices/heart3.svg';
import heart2 from '../../../../img/dices/heart2.svg';
import heart1 from '../../../../img/dices/heart1.svg';
import heart0 from '../../../../img/dices/heart0.svg';
import heartHover from '../../../../img/dices/heartHover.svg';
import IndexBox from './elements/IndexBox';
import {
  IDefence,
  IMagic,
  IPossessedSkills,
  IRollAction,
  ISkillDices,
  ISkillDicesData,
  IWeapon
} from '../../../../interfaces/skillDices';
import WeaponsRows from './elements/WeaponsRows';
import { defence, magic, weapons, rollButtons } from './skillDicesData';

const MAX_HEALTH = 5;
const COMMAND_NAME = '/skill-dice';

const SkillDices = ({ onClose, send, disableSound }: ISkillDices) => {
  const [hitPoints, sethitPoints] = useState(5);
  const [defenceIndex, setdefenceIndex] = useState(0);
  const [defenceArmorIndex, setdefenceArmorIndex] = useState(0);
  const [defenceMastery, setdefenceMastery] = useState(0);
  const [shieldDefenceIndex, setshieldDefenceIndex] = useState(0);
  const [attackIndex, setattackIndex] = useState(0);
  const [attackMastery, setattackMastery] = useState(0);
  const [attackWeaponIndex, setattackWeaponIndex] = useState(0);
  const [magicIndex, setmagicIndex] = useState(0);
  const [magicMastery, setmagicMastery] = useState(0);
  const [defenceSelected, setdefenceSelected] = useState<IDefence | null>(null);
  const [weaponSelected, setweaponSelected] = useState<IWeapon>('fist');
  const [weaponEquipped, setweaponEquipped] = useState<IWeapon[]>(['fist']);
  const [magicSelected, setmagicSelected] = useState<IMagic | null>(null);
  const [magicBuff, setmagicBuff] = useState(0);
  const [attackBuff, setattackBuff] = useState(0);
  const [defenceBuff, setdefenceBuff] = useState(0);
  const [isWolf, setisWolf] = useState(false);
  const [isVampus, setisVampus] = useState(false);
  const [playerSkillData, setplayerSkillData] =
    useState<null | IPossessedSkills>(null);
  const currentHealthIcon = useMemo(
    () =>
      ({ 0: heart0, 1: heart1, 2: heart2, 3: heart3, 4: heart4, 5: heart5 }[
        hitPoints
      ]),
    [hitPoints]
  );

  useEffect(() => {
    if (!defenceSelected || !playerSkillData) {
      setdefenceMastery(0);
      setdefenceArmorIndex(0);
      return;
    }
    setdefenceArmorIndex(defence[defenceSelected].index);
    if (defenceSelected in playerSkillData) {
      setdefenceMastery(playerSkillData[defenceSelected].level + 1);
    } else {
      setdefenceMastery(0);
    }
  }, [defenceSelected]);

  useEffect(() => {
    if (isWolf) {
      setdefenceIndex(6 + defenceBuff);
      return;
    }
    const vampusBuff = isVampus ? 2 : 0;
    setdefenceIndex(
      defenceMastery +
        defenceArmorIndex +
        defenceBuff +
        shieldDefenceIndex +
        vampusBuff
    );
  }, [
    defenceMastery,
    defenceArmorIndex,
    defenceBuff,
    shieldDefenceIndex,
    isWolf,
    isVampus
  ]);

  useEffect(() => {
    if (!magicSelected || !playerSkillData) return;
    let vampusBuff = 0;
    if (
      isVampus &&
      ['illusion', 'conjuration', 'destruction'].includes(magicSelected)
    ) {
      vampusBuff = 2;
    }
    if (magicSelected in playerSkillData) {
      setmagicMastery(playerSkillData[magicSelected].level + 1 + vampusBuff);
    } else {
      setmagicMastery(vampusBuff);
    }
  }, [magicSelected, isVampus]);

  useEffect(() => {
    const magicStaffBuff = weaponEquipped[0] === 'magicstaff' ? 1 : 0;
    const mageRobeBuff = defenceSelected === 'robe' ? 1 : 0;
    setmagicIndex(magicMastery + magicStaffBuff + mageRobeBuff + magicBuff);
  }, [magicMastery, weaponSelected, defenceSelected, magicBuff]);

  useEffect(() => {
    setattackWeaponIndex(weapons[weaponSelected].index);
    if (!playerSkillData) {
      setattackMastery(0);
      setshieldDefenceIndex(0);
      return;
    }
    // shield defence index
    if (['shieldlight', 'shieldheavy'].includes(weaponEquipped[0])) {
      const shieldIndex = weaponEquipped[0] === 'shieldlight' ? 1 : 2;
      let shieldMasteryIndex = 0;
      if ('shield' in playerSkillData) {
        const shieldMastery = playerSkillData.shield.level;
        if (shieldMastery > 0) shieldMasteryIndex = 1;
        if (shieldMastery === 3) shieldMasteryIndex = 2;
      }
      setshieldDefenceIndex(shieldIndex + shieldMasteryIndex);
    }
    // one arm weapon
    if (
      // weaponSelected !== 'magicstaff' &&
      weaponEquipped.length === 1 &&
      weaponEquipped[0] in playerSkillData
    ) {
      setattackMastery(playerSkillData[weaponEquipped[0]].level + 1);
      return;
    }
    // take right hand mastery if two handed
    if (
      // weaponSelected !== 'magicstaff' &&
      weaponEquipped.length === 2 &&
      weaponEquipped[1] in playerSkillData
    ) {
      setattackMastery(playerSkillData[weaponEquipped[1]].level + 1);
      return;
    }
    setattackMastery(0);
  }, [weaponSelected, playerSkillData, weaponEquipped, weapons]);

  useEffect(() => {
    if (isWolf) {
      setattackIndex(7 + attackBuff);
      return;
    }
    const vampusBuff = isVampus ? 2 : 0;
    setattackIndex(attackWeaponIndex + attackMastery + vampusBuff + attackBuff);
  }, [attackWeaponIndex, attackMastery, isWolf, isVampus, attackBuff]);

  const init = (event) => {
    const { skills, weapons, armor } = (event as CustomEvent)
      .detail as ISkillDicesData;
    setplayerSkillData(skills);
    const differentWeapon =
      weapons.length === 2 &&
      weapons[0] !== weapons[1] &&
      !['shieldlight', 'shieldheavy', 'magicstaff'].includes(weapons[0]);
    const weaponName =
      weapons.length === 1 || differentWeapon ? weapons[0] : weapons[1];
    setweaponSelected(differentWeapon ? 'different' : weaponName);
    setweaponEquipped(weapons);
    if (armor) {
      setdefenceSelected(armor);
    }
  };

  useEffect(() => {
    send(`${COMMAND_NAME} init`);
    window.addEventListener('initSkillDices', init);
    return () => {
      window.removeEventListener('updateSkillMenu', init);
    };
  }, []);

  const playSound = (action: IRollAction | 'heal' | 'self-attack' | 'wolf' | 'vampus') => {
    if (disableSound) return;
    const mapper = {
      initiative: 'Initiative',
      weapon: 'Sword',
      magic: 'Magic',
      defence: 'Shield',
      vampus: 'Vampire',
      wolf: 'Werewolf',
      heal: 'HP_plus',
      'self-attack': 'HP_minus'
    };
    const audio = new Audio(
      require(`../../../../sound/${mapper[action]}.mp3`).default
    );
    audio.play();
  };

  const handleRoll = (
    action: IRollAction,
    type?: string,
    value?: number,
    buff?: number,
    hitPoints?: number
  ) => {
    playSound(action);
    if (action === 'weapon' && isWolf) {
      send(`${COMMAND_NAME} ${action} claw ${value} ${buff}`);
      return;
    }
    send(`${COMMAND_NAME} ${action} ${type} ${value} ${buff} ${hitPoints}`);
  };

  const handleHeal = () => {
    if (hitPoints === MAX_HEALTH) return;
    if (send(`${COMMAND_NAME} heal ${hitPoints + 1}`)) {
      playSound('heal');
      sethitPoints(hitPoints + 1);
    }
    ;
  };

  const handleSelfAttack = () => {
    if (hitPoints === 0) {
      sethitPoints(MAX_HEALTH);
      return;
    }
    if (send(`${COMMAND_NAME} self-attack ${hitPoints - 1}`)) {
      playSound('self-attack');
      sethitPoints(hitPoints - 1);
    }
    ;
  };

  const handleMagicSelect = (name: IMagic) => {
    if (magicSelected === name) return;
    setmagicSelected(name);
  };

  const handleFormSelect = (name: 'wolf' | 'vampus') => {
    if (name === 'wolf') {
      send(`${COMMAND_NAME} wolf ${isWolf ? 'off' : 'on'}`);
      if (!isWolf) {
        playSound('wolf');
      }
      setisWolf(!isWolf);
      setisVampus(false);
    }
    if (name === 'vampus') {
      send(`${COMMAND_NAME} vampus ${isVampus ? 'off' : 'on'}`);
      if (!isVampus) {
        playSound('vampus');
      }
      setisVampus(!isVampus);
      setisWolf(false);
    }
  };

  const buffHandler = (
    name: 'magic' | 'attack' | 'defence',
    newValue: number
  ) => {
    const setter = {
      magic: setmagicBuff,
      attack: setattackBuff,
      defence: setdefenceBuff
    }[name];
    if (Math.abs(newValue) <= 6) {
      setter(newValue);
    }
  };

  return (
    <div className="chat-dices__container ">
    <div className="chat-dices__row-container chat-dices__row-container--yellow">
      <div
        onClick={() => handleRoll('initiative')}
        className="chat-dices__button chat-dices__button--yellow"
        dangerouslySetInnerHTML={{ __html: rollButtons.initiative }}
      ></div>
      </div>
      <div className="chat-dices__row-container chat-dices__row-container--purple">
        <div
          onClick={() =>
            handleRoll('magic', magicSelected, magicIndex, magicBuff)
          }
          className={`chat-dices__button chat-dices__button--purple ${magicSelected ? '' : 'chat-dices__button--disabled'}`}
          dangerouslySetInnerHTML={{ __html: rollButtons.magic }}
        ></div>
        <IndexBox
          index={magicIndex}
          positiveColor="purple"
          negativeColor="purple"
        ></IndexBox>
        <div
          className={`chat-dices__button ${
            magicSelected === 'conjuration' ? 'chat-dices__card--selected' : ''
          }`}
          onClick={() => handleMagicSelect('conjuration')}
          dangerouslySetInnerHTML={{ __html: magic.conjuration.icon }}
        ></div>
        <div
          className={`chat-dices__button ${
            magicSelected === 'destruction' ? 'chat-dices__card--selected' : ''
          }`}
          onClick={() => handleMagicSelect('destruction')}
          dangerouslySetInnerHTML={{ __html: magic.destruction.icon }}
        ></div>
        <div
          className={`chat-dices__button ${
            magicSelected === 'restoration' ? 'chat-dices__card--selected' : ''
          }`}
          onClick={() => handleMagicSelect('restoration')}
          dangerouslySetInnerHTML={{ __html: magic.restoration.icon }}
        ></div>
        <div
          className={`chat-dices__button ${
            magicSelected === 'alteration' ? 'chat-dices__card--selected' : ''
          }`}
          onClick={() => handleMagicSelect('alteration')}
          dangerouslySetInnerHTML={{ __html: magic.alteration.icon }}
        ></div>
        <div
          className={`chat-dices__button ${
            magicSelected === 'illusion' ? 'chat-dices__card--selected' : ''
          }`}
          onClick={() => handleMagicSelect('illusion')}
          dangerouslySetInnerHTML={{ __html: magic.illusion.icon }}
        ></div>
        <IndexBox index={magicBuff}></IndexBox>
      </div>
      <WeaponsRows
        index={attackIndex}
        buff={attackBuff}
        weaponEquipped={weaponEquipped}
        isWolf={isWolf}
        onRoll={() =>
          handleRoll('weapon', weaponSelected, attackIndex, attackBuff)
        }
      ></WeaponsRows>
      <div className="chat-dices__row-container chat-dices__row-container--green">
        <div
          onClick={() => handleHeal()}
          className="chat-dices__button chat-dices__button--green"
          dangerouslySetInnerHTML={{ __html: rollButtons.heal }}
        ></div>
        <div className="chat-dices__number-container" />
        <svg
          className={`chat-dices__button ${
            magicBuff > 0 ? 'chat-dices__card--selected' : ''
          }`}
          onClick={() => buffHandler('magic', magicBuff + 1)}
          width="26"
          height="41"
          viewBox="0 0 26 41"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M25.2504 4.3501C25.2504 1.68343 23.9171 0.350098 21.2504 0.350098H4.90039C2.23372 0.350098 0.900391 1.68343 0.900391 4.3501V36.3501C0.900391 39.0168 2.23372 40.3501 4.90039 40.3501H21.2504C23.9171 40.3501 25.2504 39.0168 25.2504 36.3501V4.3501ZM18.4004 2.8501L22.9004 7.2001V33.3501L18.3504 38.0001H7.65039L3.40039 33.9501V7.3001L7.60039 2.8501H18.4004ZM20.2004 23.9501L19.5004 23.8001C19.3671 24.0001 19.2337 24.1834 19.1004 24.3501C19.0337 24.4501 18.9671 24.5334 18.9004 24.6001L17.3504 26.0501L18.9504 25.3501C19.0837 25.2168 19.2004 25.1001 19.3004 25.0001C19.6671 24.6668 19.9671 24.3168 20.2004 23.9501ZM12.9504 14.5001C12.8837 14.5001 12.8171 14.5001 12.7504 14.5001C11.8837 14.5334 11.0171 14.6834 10.1504 14.9501C9.71706 15.1168 9.26706 15.3334 8.80039 15.6001C8.66706 15.7001 8.53372 15.8001 8.40039 15.9001C7.90039 16.3001 7.50039 16.7168 7.20039 17.1501C7.06706 17.4501 6.95039 17.7334 6.85039 18.0001V18.0501C6.85039 18.0834 6.85039 18.1168 6.85039 18.1501C6.81706 18.2501 6.80039 18.3334 6.80039 18.4001C6.76706 18.5668 6.73373 18.7168 6.70039 18.8501C6.63373 19.3501 6.61706 19.7834 6.65039 20.1501C6.65039 20.1834 6.65039 20.2168 6.65039 20.2501C6.65039 20.5168 6.70039 20.7334 6.80039 20.9001L5.25039 23.2501C5.08372 23.5501 5.08372 23.7834 5.25039 23.9501L6.25039 24.3501C6.28372 24.5834 6.25039 24.8001 6.15039 25.0001C6.08372 25.0668 6.08372 25.1834 6.15039 25.3501C6.15039 25.4168 6.20039 25.4501 6.30039 25.4501C6.23372 25.4834 6.20039 25.5334 6.20039 25.6001C6.23373 25.8334 6.33372 25.9834 6.50039 26.0501C6.63372 26.1168 6.68372 26.2834 6.65039 26.5501C6.45039 27.0168 6.43372 27.4001 6.60039 27.7001C6.76706 28.1334 7.01706 28.3501 7.35039 28.3501L9.15039 28.5001C9.68372 28.6334 9.93372 28.9834 9.90039 29.5501L9.80039 30.9501H17.2004L16.7004 27.2001C16.7004 27.0668 16.7004 26.9501 16.7004 26.8501V26.8001C16.7004 26.5668 16.7171 26.3501 16.7504 26.1501C16.8171 25.9501 16.9004 25.7334 17.0004 25.5001L17.9004 25.1001C18.0004 24.9668 18.1004 24.8501 18.2004 24.7501C18.4671 24.4834 18.7171 24.2001 18.9504 23.9001L18.3504 23.7501C18.2504 23.9501 18.1504 24.1168 18.0504 24.2501C17.9837 24.3168 17.9171 24.3834 17.8504 24.4501L17.2504 25.0501C17.3171 24.9501 17.3504 24.8834 17.3504 24.8501C17.4171 24.7168 17.5004 24.6001 17.6004 24.5001C17.8671 24.1668 18.1004 23.8334 18.3004 23.5001V23.4501L18.3504 23.4001C18.6171 22.9334 18.8337 22.5001 19.0004 22.1001C19.0671 21.9001 19.1171 21.7168 19.1504 21.5501C19.1837 21.4501 19.2004 21.3334 19.2004 21.2001C19.2337 20.9334 19.2671 20.6834 19.3004 20.4501V20.4001C19.3004 19.7001 19.1837 19.0001 18.9504 18.3001C18.9171 18.2001 18.9004 18.1334 18.9004 18.1001C18.5671 17.3668 18.1004 16.7168 17.5004 16.1501C17.5004 16.1168 17.4837 16.0834 17.4504 16.0501C17.4171 16.0168 17.3671 15.9834 17.3004 15.9501C17.1337 15.7834 16.9337 15.6334 16.7004 15.5001C16.6004 15.4001 16.4837 15.3168 16.3504 15.2501C16.3171 15.2168 16.2837 15.1834 16.2504 15.1501C15.9171 14.9834 15.5837 14.8501 15.2504 14.7501C14.7837 14.4834 14.0171 14.4001 12.9504 14.5001ZM6.50039 18.7501L5.95039 18.1501C5.88373 18.6501 5.85039 19.1501 5.85039 19.6501C5.85039 19.6834 6.01706 20.3001 6.35039 21.5001V19.7501L6.40039 19.7001V19.6501C6.40039 19.5834 6.40039 19.5334 6.40039 19.5001C6.40039 19.2001 6.43372 18.9501 6.50039 18.7501ZM6.65039 16.2001C6.61706 16.3001 6.58372 16.3834 6.55039 16.4501C6.28372 17.0168 6.08372 17.5834 5.95039 18.1501L6.60039 18.1001C6.73372 17.7001 6.88372 17.3001 7.05039 16.9001L6.65039 16.2001ZM8.15039 14.3001C8.08372 14.3668 8.00039 14.4501 7.90039 14.5501C7.40039 15.0501 6.98372 15.6001 6.65039 16.2001L7.30039 16.4501C7.56706 15.9501 7.91706 15.5001 8.35039 15.1001L8.15039 14.3001ZM10.5004 12.8501L11.0004 13.4001C11.6004 13.2001 12.3004 13.1001 13.1004 13.1001C13.2671 13.1001 13.4337 13.1001 13.6004 13.1001L13.8504 12.4501C13.6837 12.4168 13.5171 12.4001 13.3504 12.4001C13.2837 12.4001 13.2004 12.4001 13.1004 12.4001C12.2337 12.4334 11.3671 12.5834 10.5004 12.8501ZM10.4504 13.6501L10.5004 12.8501C9.63372 13.1501 8.85039 13.6334 8.15039 14.3001L8.75039 14.7501C9.28372 14.2501 9.85039 13.8834 10.4504 13.6501ZM16.8504 14.2501L17.4004 13.8501C16.3337 13.0834 15.1504 12.6168 13.8504 12.4501L14.1504 13.2001C15.1171 13.3334 16.0171 13.6834 16.8504 14.2501ZM5.30039 18.9001C5.30039 18.8001 5.30039 18.7334 5.30039 18.7001C5.30039 18.4001 5.31706 18.1168 5.35039 17.8501L4.80039 17.1501C4.70039 17.7168 4.65039 18.3001 4.65039 18.9001C4.65039 18.9334 4.85039 19.6834 5.25039 21.1501V19.0001L5.30039 18.9501V18.9001ZM5.55039 17.0501C5.68372 16.5834 5.85039 16.1168 6.05039 15.6501L5.60039 14.8501C5.56706 14.9168 5.51706 14.9834 5.45039 15.0501C5.15039 15.7168 4.93372 16.4168 4.80039 17.1501L5.55039 17.0501ZM7.35039 12.6001C7.28372 12.6668 7.20039 12.7501 7.10039 12.8501C6.50039 13.4501 6.00039 14.1168 5.60039 14.8501L6.35039 15.0501C6.68372 14.4834 7.10039 13.9834 7.60039 13.5501L7.35039 12.6001ZM10.1004 11.8001L10.1504 10.8501C9.15039 11.2168 8.21706 11.8001 7.35039 12.6001L8.05039 13.0501C8.68372 12.4834 9.36706 12.0668 10.1004 11.8001ZM13.5504 10.3001C13.4504 10.3001 13.3504 10.3001 13.2504 10.3001C12.2171 10.3334 11.1837 10.5168 10.1504 10.8501L10.7504 11.5001C11.4837 11.2668 12.3171 11.1501 13.2504 11.1501C13.4504 11.1501 13.6504 11.1501 13.8504 11.1501L14.2004 10.3501C13.9671 10.3168 13.7504 10.3001 13.5504 10.3001ZM17.6504 12.5001L18.3504 12.0001C17.1171 11.0668 15.7337 10.5168 14.2004 10.3501L14.5004 11.2501C15.6671 11.4168 16.7171 11.8334 17.6504 12.5001ZM20.6504 22.0001C20.4504 22.3001 20.2671 22.6334 20.1004 23.0001C20.0337 23.0668 19.9837 23.1501 19.9504 23.2501L20.2504 23.9501C20.7171 23.2834 21.0837 22.5501 21.3504 21.7501L20.8004 22.0001H20.6504ZM21.8504 18.8501L21.1004 19.4501C21.0671 20.0834 20.9837 20.7001 20.8504 21.3001L21.3504 21.7501C21.6504 20.9501 21.8171 20.1001 21.8504 19.2001C21.8504 19.1001 21.8504 19.0001 21.8504 18.9001V18.8501ZM21.1004 15.4501L20.6004 16.1501C20.9004 16.9168 21.0671 17.7334 21.1004 18.6001L21.8504 18.8501C21.8504 17.6168 21.6004 16.4834 21.1004 15.4501ZM18.2504 12.9501C18.4171 13.0834 18.6171 13.2501 18.8504 13.4501C19.4504 14.0501 19.9337 14.7334 20.3004 15.5001L21.1004 15.4501C20.6671 14.4834 20.0671 13.6168 19.3004 12.8501C19.0337 12.5168 18.7171 12.2501 18.3504 12.0501L18.2504 12.9501ZM19.9504 22.1001L19.4504 22.2501H19.3004C19.1671 22.5168 19.0337 22.8001 18.9004 23.1001C18.8337 23.1668 18.7837 23.2334 18.7504 23.3001L19.0004 23.9001C19.3671 23.3334 19.6837 22.7334 19.9504 22.1001ZM19.7504 19.4001L20.3004 19.6001C20.3004 18.5668 20.1171 17.6001 19.7504 16.7001L19.2504 17.3501C19.5504 17.9834 19.7171 18.6668 19.7504 19.4001ZM20.3004 19.8501C20.3004 19.8168 20.3004 19.7501 20.3004 19.6501V19.6001L19.7504 20.1501C19.7171 20.6501 19.6171 21.1501 19.4504 21.6501L19.9504 22.1001C20.1837 21.3668 20.3004 20.6168 20.3004 19.8501ZM18.2004 14.5501C17.9671 14.2834 17.7004 14.0668 17.4004 13.9001L17.3004 14.6501C17.4337 14.7501 17.6004 14.8834 17.8004 15.0501C18.3004 15.5834 18.7171 16.1501 19.0504 16.7501L19.7504 16.7001C19.3837 15.9334 18.8671 15.2168 18.2004 14.5501Z"
            fill="black"
          />
          <path
            d="M22.9004 7.2001L18.4004 2.8501H7.60039L3.40039 7.3001V33.9501L7.65039 38.0001H18.3504L22.9004 33.3501V7.2001ZM17.4004 13.9001C17.7004 14.0668 17.9671 14.2834 18.2004 14.5501C18.8671 15.2168 19.3837 15.9334 19.7504 16.7001C20.1171 17.6001 20.3004 18.5668 20.3004 19.6001V19.6501C20.3004 19.7501 20.3004 19.8168 20.3004 19.8501C20.3004 20.6168 20.1837 21.3668 19.9504 22.1001C19.6837 22.7334 19.3671 23.3334 19.0004 23.9001L18.7504 23.3001C18.7837 23.2334 18.8337 23.1668 18.9004 23.1001C19.0337 22.8001 19.1671 22.5168 19.3004 22.2501H19.4504L19.9504 22.1001L19.4504 21.6501C19.6171 21.1501 19.7171 20.6501 19.7504 20.1501L20.3004 19.6001L19.7504 19.4001C19.7171 18.6668 19.5504 17.9834 19.2504 17.3501L19.7504 16.7001L19.0504 16.7501C18.7171 16.1501 18.3004 15.5834 17.8004 15.0501C17.6004 14.8834 17.4337 14.7501 17.3004 14.6501L17.4004 13.9001ZM18.8504 13.4501C18.6171 13.2501 18.4171 13.0834 18.2504 12.9501L18.3504 12.0501C18.7171 12.2501 19.0337 12.5168 19.3004 12.8501C20.0671 13.6168 20.6671 14.4834 21.1004 15.4501C21.6004 16.4834 21.8504 17.6168 21.8504 18.8501V18.9001C21.8504 19.0001 21.8504 19.1001 21.8504 19.2001C21.8171 20.1001 21.6504 20.9501 21.3504 21.7501C21.0837 22.5501 20.7171 23.2834 20.2504 23.9501L19.9504 23.2501C19.9837 23.1501 20.0337 23.0668 20.1004 23.0001C20.2671 22.6334 20.4504 22.3001 20.6504 22.0001H20.8004L21.3504 21.7501L20.8504 21.3001C20.9837 20.7001 21.0671 20.0834 21.1004 19.4501L21.8504 18.8501L21.1004 18.6001C21.0671 17.7334 20.9004 16.9168 20.6004 16.1501L21.1004 15.4501L20.3004 15.5001C19.9337 14.7334 19.4504 14.0501 18.8504 13.4501ZM18.3504 12.0001L17.6504 12.5001C16.7171 11.8334 15.6671 11.4168 14.5004 11.2501L14.2004 10.3501L13.8504 11.1501C13.6504 11.1501 13.4504 11.1501 13.2504 11.1501C12.3171 11.1501 11.4837 11.2668 10.7504 11.5001L10.1504 10.8501L10.1004 11.8001C9.36706 12.0668 8.68372 12.4834 8.05039 13.0501L7.35039 12.6001L7.60039 13.5501C7.10039 13.9834 6.68372 14.4834 6.35039 15.0501L5.60039 14.8501L6.05039 15.6501C5.85039 16.1168 5.68372 16.5834 5.55039 17.0501L4.80039 17.1501L5.35039 17.8501C5.31706 18.1168 5.30039 18.4001 5.30039 18.7001C5.30039 18.7334 5.30039 18.8001 5.30039 18.9001V18.9501L5.25039 19.0001V21.1501C4.85039 19.6834 4.65039 18.9334 4.65039 18.9001C4.65039 18.3001 4.70039 17.7168 4.80039 17.1501C4.93372 16.4168 5.15039 15.7168 5.45039 15.0501C5.51706 14.9834 5.56706 14.9168 5.60039 14.8501C6.00039 14.1168 6.50039 13.4501 7.10039 12.8501C7.20039 12.7501 7.28372 12.6668 7.35039 12.6001C8.21706 11.8001 9.15039 11.2168 10.1504 10.8501C11.1837 10.5168 12.2171 10.3334 13.2504 10.3001C13.3504 10.3001 13.4504 10.3001 13.5504 10.3001C13.7504 10.3001 13.9671 10.3168 14.2004 10.3501C15.7337 10.5168 17.1171 11.0668 18.3504 12.0001ZM17.4004 13.8501L16.8504 14.2501C16.0171 13.6834 15.1171 13.3334 14.1504 13.2001L13.8504 12.4501L13.6004 13.1001C13.4337 13.1001 13.2671 13.1001 13.1004 13.1001C12.3004 13.1001 11.6004 13.2001 11.0004 13.4001L10.5004 12.8501L10.4504 13.6501C9.85039 13.8834 9.28372 14.2501 8.75039 14.7501L8.15039 14.3001L8.35039 15.1001C7.91706 15.5001 7.56706 15.9501 7.30039 16.4501L6.65039 16.2001L7.05039 16.9001C6.88372 17.3001 6.73372 17.7001 6.60039 18.1001L5.95039 18.1501L6.50039 18.7501C6.43372 18.9501 6.40039 19.2001 6.40039 19.5001C6.40039 19.5334 6.40039 19.5834 6.40039 19.6501V19.7001L6.35039 19.7501V21.5001C6.01706 20.3001 5.85039 19.6834 5.85039 19.6501C5.85039 19.1501 5.88373 18.6501 5.95039 18.1501C6.08373 17.5834 6.28372 17.0168 6.55039 16.4501C6.58372 16.3834 6.61706 16.3001 6.65039 16.2001C6.98372 15.6001 7.40039 15.0501 7.90039 14.5501C8.00039 14.4501 8.08372 14.3668 8.15039 14.3001C8.85039 13.6334 9.63372 13.1501 10.5004 12.8501C11.3671 12.5834 12.2337 12.4334 13.1004 12.4001C13.2004 12.4001 13.2837 12.4001 13.3504 12.4001C13.5171 12.4001 13.6837 12.4168 13.8504 12.4501C15.1504 12.6168 16.3337 13.0834 17.4004 13.8501ZM12.7504 14.5001C12.8171 14.5001 12.8837 14.5001 12.9504 14.5001C14.0171 14.4001 14.7837 14.4834 15.2504 14.7501C15.5837 14.8501 15.9171 14.9834 16.2504 15.1501C16.2837 15.1834 16.3171 15.2168 16.3504 15.2501C16.4837 15.3168 16.6004 15.4001 16.7004 15.5001C16.9337 15.6334 17.1337 15.7834 17.3004 15.9501C17.3671 15.9834 17.4171 16.0168 17.4504 16.0501C17.4837 16.0834 17.5004 16.1168 17.5004 16.1501C18.1004 16.7168 18.5671 17.3668 18.9004 18.1001C18.9004 18.1334 18.9171 18.2001 18.9504 18.3001C19.1837 19.0001 19.3004 19.7001 19.3004 20.4001V20.4501C19.2671 20.6834 19.2337 20.9334 19.2004 21.2001C19.2004 21.3334 19.1837 21.4501 19.1504 21.5501C19.1171 21.7168 19.0671 21.9001 19.0004 22.1001C18.8337 22.5001 18.6171 22.9334 18.3504 23.4001L18.3004 23.4501V23.5001C18.1004 23.8334 17.8671 24.1668 17.6004 24.5001C17.5004 24.6001 17.4171 24.7168 17.3504 24.8501C17.3504 24.8834 17.3171 24.9501 17.2504 25.0501L17.8504 24.4501C17.9171 24.3834 17.9837 24.3168 18.0504 24.2501C18.1504 24.1168 18.2504 23.9501 18.3504 23.7501L18.9504 23.9001C18.7171 24.2001 18.4671 24.4834 18.2004 24.7501C18.1004 24.8501 18.0004 24.9668 17.9004 25.1001L17.0004 25.5001C16.9004 25.7334 16.8171 25.9501 16.7504 26.1501C16.7171 26.3501 16.7004 26.5668 16.7004 26.8001V26.8501C16.7004 26.9501 16.7004 27.0668 16.7004 27.2001L17.2004 30.9501H9.80039L9.90039 29.5501C9.93372 28.9834 9.68372 28.6334 9.15039 28.5001L7.35039 28.3501C7.01706 28.3501 6.76706 28.1334 6.60039 27.7001C6.43372 27.4001 6.45039 27.0168 6.65039 26.5501C6.68372 26.2834 6.63372 26.1168 6.50039 26.0501C6.33372 25.9834 6.23373 25.8334 6.20039 25.6001C6.20039 25.5334 6.23372 25.4834 6.30039 25.4501C6.20039 25.4501 6.15039 25.4168 6.15039 25.3501C6.08372 25.1834 6.08372 25.0668 6.15039 25.0001C6.25039 24.8001 6.28372 24.5834 6.25039 24.3501L5.25039 23.9501C5.08372 23.7834 5.08372 23.5501 5.25039 23.2501L6.80039 20.9001C6.70039 20.7334 6.65039 20.5168 6.65039 20.2501C6.65039 20.2168 6.65039 20.1834 6.65039 20.1501C6.61706 19.7834 6.63373 19.3501 6.70039 18.8501C6.73373 18.7168 6.76706 18.5668 6.80039 18.4001C6.80039 18.3334 6.81706 18.2501 6.85039 18.1501C6.85039 18.1168 6.85039 18.0834 6.85039 18.0501V18.0001C6.95039 17.7334 7.06706 17.4501 7.20039 17.1501C7.50039 16.7168 7.90039 16.3001 8.40039 15.9001C8.53372 15.8001 8.66706 15.7001 8.80039 15.6001C9.26706 15.3334 9.71706 15.1168 10.1504 14.9501C11.0171 14.6834 11.8837 14.5334 12.7504 14.5001ZM19.5004 23.8001L20.2004 23.9501C19.9671 24.3168 19.6671 24.6668 19.3004 25.0001C19.2004 25.1001 19.0837 25.2168 18.9504 25.3501L17.3504 26.0501L18.9004 24.6001C18.9671 24.5334 19.0337 24.4501 19.1004 24.3501C19.2337 24.1834 19.3671 24.0001 19.5004 23.8001Z"
            fill="white"
          />
        </svg>
        <svg
          className={`chat-dices__button ${
            attackBuff > 0 ? 'chat-dices__card--selected' : ''
          }`}
          onClick={() => buffHandler('attack', attackBuff + 1)}
          width="26"
          height="41"
          viewBox="0 0 26 41"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M25.2504 4.3501C25.2504 1.68343 23.9171 0.350098 21.2504 0.350098H4.90039C2.23372 0.350098 0.900391 1.68343 0.900391 4.3501V36.3501C0.900391 39.0168 2.23372 40.3501 4.90039 40.3501H21.2504C23.9171 40.3501 25.2504 39.0168 25.2504 36.3501V4.3501ZM18.4004 2.8501L22.9004 7.2001V33.3501L18.3504 38.0001H7.65039L3.40039 33.9501V7.3001L7.60039 2.8501H18.4004ZM10.8504 13.4001L11.9004 13.6001L21.3504 10.9501L20.1004 9.7001L10.8504 13.4001ZM18.2504 5.1501L16.6004 4.5001L9.45039 11.4501L10.4504 11.2501L18.2504 5.1501ZM14.2004 19.3501L14.7004 19.9001L21.3504 22.2001L21.1504 21.0001L14.2004 19.3501ZM12.6504 16.1501L13.4004 16.6001L21.7504 17.2001L21.1504 15.8501L12.6504 16.1501ZM16.9504 33.7501C17.3171 34.6168 17.8171 34.9168 18.4504 34.6501C19.1837 34.3501 19.2837 33.7501 18.7504 32.8501L16.9504 33.7501ZM17.0004 33.1001L18.2004 32.5501L17.9504 32.0001L16.7504 32.4501L17.0004 33.1001ZM16.4004 31.7001L16.6504 32.2501L17.8004 31.7001L17.5504 31.1501L16.4004 31.7001ZM15.9004 30.6001L16.2504 31.4501L17.4504 30.8501L17.0504 30.0001L15.9004 30.6001ZM16.6004 29.0501L15.3504 29.6501L15.7004 30.2001L16.8504 29.6001L16.6004 29.0501ZM16.4504 28.8001L16.1004 28.0001L14.8504 28.5501L15.2504 29.4001L16.4504 28.8001ZM16.5504 24.8501L15.7504 26.3501L13.8504 27.2001L12.1004 26.8001L11.8004 27.7001L14.1004 28.3001L16.2504 27.3501L17.3504 25.3001L16.5504 24.8501ZM8.60039 11.0501L6.70039 9.4501L6.60039 12.0001L13.6504 26.8501L14.3504 26.5001L7.45039 12.0001C7.51706 11.6334 7.66706 11.5168 7.90039 11.6501L14.8004 26.3501L15.6504 25.9501L8.60039 11.0501Z"
            fill="black"
          />
          <path
            d="M22.9004 7.2001L18.4004 2.8501H7.60039L3.40039 7.3001V33.9501L7.65039 38.0001H18.3504L22.9004 33.3501V7.2001ZM6.70039 9.4501L8.60039 11.0501L15.6504 25.9501L14.8004 26.3501L7.90039 11.6501C7.66706 11.5168 7.51706 11.6334 7.45039 12.0001L14.3504 26.5001L13.6504 26.8501L6.60039 12.0001L6.70039 9.4501ZM15.5004 21.6001L15.3504 21.4501C15.5171 21.3501 15.7004 21.2501 15.9004 21.1501L15.5004 21.6001ZM15.7504 26.3501L16.5504 24.8501L17.3504 25.3001L16.2504 27.3501L14.1004 28.3001L11.8004 27.7001L12.1004 26.8001L13.8504 27.2001L15.7504 26.3501ZM16.1004 28.0001L16.4504 28.8001L15.2504 29.4001L14.8504 28.5501L16.1004 28.0001ZM15.3504 29.6501L16.6004 29.0501L16.8504 29.6001L15.7004 30.2001L15.3504 29.6501ZM16.2504 31.4501L15.9004 30.6001L17.0504 30.0001L17.4504 30.8501L16.2504 31.4501ZM16.6504 32.2501L16.4004 31.7001L17.5504 31.1501L17.8004 31.7001L16.6504 32.2501ZM18.2004 32.5501L17.0004 33.1001L16.7504 32.4501L17.9504 32.0001L18.2004 32.5501ZM18.4504 34.6501C17.8171 34.9168 17.3171 34.6168 16.9504 33.7501L18.7504 32.8501C19.2837 33.7501 19.1837 34.3501 18.4504 34.6501ZM13.4004 16.6001L12.6504 16.1501L21.1504 15.8501L21.7504 17.2001L13.4004 16.6001ZM14.7004 19.9001L14.2004 19.3501L21.1504 21.0001L21.3504 22.2001L14.7004 19.9001ZM16.6004 4.5001L18.2504 5.1501L10.4504 11.2501L9.45039 11.4501L16.6004 4.5001ZM11.9004 13.6001L10.8504 13.4001L20.1004 9.7001L21.3504 10.9501L11.9004 13.6001Z"
            fill="white"
          />
          <path
            d="M15.3506 21.4501L15.5006 21.6001L15.9006 21.1501C15.7006 21.2501 15.5173 21.3501 15.3506 21.4501Z"
            fill="white"
          />
        </svg>
        <svg
          className={`chat-dices__button ${
            defenceBuff > 0 ? 'chat-dices__card--selected' : ''
          }`}
          onClick={() => buffHandler('defence', defenceBuff + 1)}
          width="25"
          height="41"
          viewBox="0 0 25 41"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M24.7377 4.8938C24.7377 2.22713 23.4044 0.893799 20.7377 0.893799H4.3877C1.72103 0.893799 0.387695 2.22713 0.387695 4.8938V36.8938C0.387695 39.5605 1.72103 40.8938 4.3877 40.8938H20.7377C23.4044 40.8938 24.7377 39.5605 24.7377 36.8938V4.8938ZM17.8877 3.3938L22.3877 7.7438V33.8938L17.8377 38.5438H7.1377L2.8877 34.4938V7.8438L7.0877 3.3938H17.8877ZM9.9377 13.2938C9.69408 13.3843 9.42741 13.4676 9.1377 13.5438C6.77337 13.9965 5.24004 14.2632 4.53769 14.3438C3.87103 22.6771 6.60436 28.6938 12.7377 32.3938C14.143 31.5175 15.593 30.1842 17.0877 28.3938C17.991 27.1602 18.5076 26.3935 18.6377 26.0938C20.3429 22.9088 21.0096 18.9921 20.6377 14.3438C16.571 13.8771 13.9377 13.0771 12.7377 11.9438C12.0876 12.4701 11.1542 12.9201 9.9377 13.2938ZM5.78769 19.6938L7.2377 18.5938L6.5877 15.4438L8.03769 17.8438L10.5877 17.0438L8.53769 18.6438L9.1877 23.0938L7.5877 19.6938H5.78769ZM12.7377 13.8438C14.9339 15.0407 17.1673 15.7573 19.4377 15.9938C19.482 22.8915 17.2486 27.7748 12.7377 30.6438V13.8438ZM18.7877 17.0438C17.063 16.748 15.313 16.0813 13.5377 15.0438C14.9856 16.4503 16.4523 17.3836 17.9377 17.8438C17.8309 20.6388 17.3309 23.2222 16.4377 25.5938C17.712 23.5114 18.4954 20.6614 18.7877 17.0438Z"
            fill="black"
          />
          <path
            d="M22.3877 7.7438L17.8877 3.3938H7.0877L2.8877 7.8438V34.4938L7.1377 38.5438H17.8377L22.3877 33.8938V7.7438ZM9.1377 13.5438C9.42741 13.4676 9.69408 13.3843 9.9377 13.2938C11.1542 12.9201 12.0876 12.4701 12.7377 11.9438C13.9377 13.0771 16.571 13.8771 20.6377 14.3438C21.0096 18.9921 20.3429 22.9088 18.6377 26.0938C18.5076 26.3935 17.991 27.1602 17.0877 28.3938C15.593 30.1842 14.143 31.5175 12.7377 32.3938C6.60436 28.6938 3.87103 22.6771 4.53769 14.3438C5.24004 14.2632 6.77337 13.9965 9.1377 13.5438ZM19.4377 15.9938C17.1673 15.7573 14.9339 15.0407 12.7377 13.8438V30.6438C17.2486 27.7748 19.482 22.8915 19.4377 15.9938ZM13.5377 15.0438C15.313 16.0813 17.063 16.748 18.7877 17.0438C18.4954 20.6614 17.712 23.5114 16.4377 25.5938C17.3309 23.2222 17.8309 20.6388 17.9377 17.8438C16.4523 17.3836 14.9856 16.4503 13.5377 15.0438ZM7.2377 18.5938L5.78769 19.6938H7.5877L9.1877 23.0938L8.53769 18.6438L10.5877 17.0438L8.03769 17.8438L6.5877 15.4438L7.2377 18.5938Z"
            fill="white"
          />
        </svg>
      </div>
      <div className="chat-dices__row-container chat-dices__row-container--red">
        <div
          onClick={() => handleSelfAttack()}
          className="chat-dices__button chat-dices__button--red"
          dangerouslySetInnerHTML={{ __html: rollButtons.selfAttack }}
        ></div>
        <div className="chat-dices__number-container" />
        <svg
          className={`chat-dices__button ${
            magicBuff < 0 ? 'chat-dices__card--selected' : ''
          }`}
          onClick={() => buffHandler('magic', magicBuff - 1)}
          width="25"
          height="41"
          viewBox="0 0 25 41"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M24.7377 4.8938C24.7377 2.22713 23.4044 0.893799 20.7377 0.893799H4.3877C1.72103 0.893799 0.387695 2.22713 0.387695 4.8938V36.8938C0.387695 39.5605 1.72103 40.8938 4.3877 40.8938H20.7377C23.4044 40.8938 24.7377 39.5605 24.7377 36.8938V4.8938ZM17.8877 3.3938L22.3877 7.7438V33.8938L17.8377 38.5438H7.1377L2.8877 34.4938V7.8438L7.0877 3.3938H17.8877ZM18.2377 12.1438C17.0377 11.2771 15.4544 10.8605 13.4877 10.8938C11.6877 10.8938 9.9377 11.3605 8.2377 12.2938C6.87103 13.2271 6.0377 14.3938 5.7377 15.7938C5.47103 17.1938 5.47103 18.2438 5.7377 18.9438L3.8877 21.8938C3.6877 22.2605 3.6877 22.5438 3.8877 22.7438L5.0877 23.2438C5.1877 23.5438 5.15436 23.7938 4.9877 23.9938C4.8877 24.0938 4.87103 24.2605 4.9377 24.4938C4.9377 24.5593 5.10436 24.5926 5.4377 24.5938C5.36686 24.5959 5.3002 24.6125 5.2377 24.6438C5.10436 24.6771 5.03769 24.7271 5.03769 24.7938C5.07103 25.0938 5.1877 25.2771 5.3877 25.3438C5.55436 25.4438 5.62103 25.6771 5.5877 26.0438C5.3877 26.6105 5.37103 27.0771 5.53769 27.4438C5.73769 27.9771 6.05436 28.2605 6.4877 28.2938L8.7377 28.4438C9.40436 28.5771 9.70436 28.9938 9.6377 29.6938L9.53769 31.4938H18.7377L18.2377 26.7938C18.1044 25.5271 18.4544 24.4105 19.2877 23.4438C20.421 21.9105 21.1044 20.5271 21.3377 19.2938C21.5044 18.0271 21.3877 16.8105 20.9877 15.6438C20.4877 14.2438 19.571 13.0771 18.2377 12.1438ZM16.8877 14.6938C16.2877 14.0938 15.5377 13.7771 14.6377 13.7438C13.4044 13.9771 12.421 14.5271 11.6877 15.3938C11.0877 16.1271 10.8044 17.0605 10.8377 18.1938C10.871 18.4605 10.9044 18.7271 10.9377 18.9938C11.0377 19.4605 11.171 19.8938 11.3377 20.2938C11.5377 20.6605 11.771 20.9771 12.0377 21.2438C11.771 21.0771 11.521 20.8771 11.2877 20.6438C10.5877 19.9105 10.1544 19.0771 9.9877 18.1438C9.95436 17.8771 9.9377 17.6105 9.9377 17.3438C9.9377 16.0771 10.3877 14.9771 11.2877 14.0438C12.1877 13.1438 13.2877 12.6938 14.5877 12.6938C15.8544 12.6938 16.9377 13.1438 17.8377 14.0438C18.171 14.3771 18.4377 14.7438 18.6377 15.1438C18.771 15.4105 18.8544 15.6438 18.8877 15.8438C19.0544 16.4438 19.0877 16.9105 18.9877 17.2438C18.7877 18.6438 18.421 19.6438 17.8877 20.2438C17.321 20.8771 16.421 21.2605 15.1877 21.3938C13.9877 21.5605 13.0044 20.9605 12.2377 19.5938C11.9044 18.9605 11.7044 18.3771 11.6377 17.8438C11.471 16.8438 11.871 16.0605 12.8377 15.4938C14.8377 14.4938 16.021 14.5105 16.3877 15.5438C16.621 16.1105 16.6044 16.9605 16.3377 18.0938C15.571 19.3605 14.6377 19.2938 13.5377 17.8938C13.7377 17.9605 13.921 18.0271 14.0877 18.0938C15.2544 18.3605 15.7544 17.9771 15.5877 16.9438C15.5544 16.7771 15.521 16.6271 15.4877 16.4938C15.1877 15.7271 14.471 15.8438 13.3377 16.8438C12.9044 17.0438 12.7544 17.5438 12.8877 18.3438C12.921 18.5438 12.971 18.7605 13.0377 18.9938C13.671 19.7271 14.6044 19.9605 15.8377 19.6938C16.5377 19.2605 17.0377 18.4271 17.3377 17.1938C17.471 16.6271 17.4544 16.0771 17.2877 15.5438C17.1877 15.2438 17.0544 14.9605 16.8877 14.6938Z"
            fill="black"
          />
          <path
            d="M22.3877 7.7438L17.8877 3.3938H7.0877L2.8877 7.8438V34.4938L7.1377 38.5438H17.8377L22.3877 33.8938V7.7438ZM13.4877 10.8938C15.4544 10.8605 17.0377 11.2771 18.2377 12.1438C19.571 13.0771 20.4877 14.2438 20.9877 15.6438C21.3877 16.8105 21.5044 18.0271 21.3377 19.2938C21.1044 20.5271 20.421 21.9105 19.2877 23.4438C18.4544 24.4105 18.1044 25.5271 18.2377 26.7938L18.7377 31.4938H9.53769L9.6377 29.6938C9.70436 28.9938 9.40436 28.5771 8.7377 28.4438L6.4877 28.2938C6.05436 28.2605 5.73769 27.9771 5.53769 27.4438C5.37103 27.0771 5.3877 26.6105 5.5877 26.0438C5.62103 25.6771 5.55436 25.4438 5.3877 25.3438C5.1877 25.2771 5.07103 25.0938 5.03769 24.7938C5.03769 24.7271 5.10436 24.6771 5.2377 24.6438C5.3002 24.6125 5.36686 24.5959 5.4377 24.5938C5.10436 24.5926 4.9377 24.5593 4.9377 24.4938C4.87103 24.2605 4.8877 24.0938 4.9877 23.9938C5.15436 23.7938 5.1877 23.5438 5.0877 23.2438L3.8877 22.7438C3.6877 22.5438 3.6877 22.2605 3.8877 21.8938L5.7377 18.9438C5.47103 18.2438 5.47103 17.1938 5.7377 15.7938C6.0377 14.3938 6.87103 13.2271 8.2377 12.2938C9.9377 11.3605 11.6877 10.8938 13.4877 10.8938ZM14.6377 13.7438C15.5377 13.7771 16.2877 14.0938 16.8877 14.6938C17.0544 14.9605 17.1877 15.2438 17.2877 15.5438C17.4544 16.0771 17.471 16.6271 17.3377 17.1938C17.0377 18.4271 16.5377 19.2605 15.8377 19.6938C14.6044 19.9605 13.671 19.7271 13.0377 18.9938C12.971 18.7605 12.921 18.5438 12.8877 18.3438C12.7544 17.5438 12.9044 17.0438 13.3377 16.8438C14.471 15.8438 15.1877 15.7271 15.4877 16.4938C15.521 16.6271 15.5544 16.7771 15.5877 16.9438C15.7544 17.9771 15.2544 18.3605 14.0877 18.0938C13.921 18.0271 13.7377 17.9605 13.5377 17.8938C14.6377 19.2938 15.571 19.3605 16.3377 18.0938C16.6044 16.9605 16.621 16.1105 16.3877 15.5438C16.021 14.5105 14.8377 14.4938 12.8377 15.4938C11.871 16.0605 11.471 16.8438 11.6377 17.8438C11.7044 18.3771 11.9044 18.9605 12.2377 19.5938C13.0044 20.9605 13.9877 21.5605 15.1877 21.3938C16.421 21.2605 17.321 20.8771 17.8877 20.2438C18.421 19.6438 18.7877 18.6438 18.9877 17.2438C19.0877 16.9105 19.0544 16.4438 18.8877 15.8438C18.8544 15.6438 18.771 15.4105 18.6377 15.1438C18.4377 14.7438 18.171 14.3771 17.8377 14.0438C16.9377 13.1438 15.8544 12.6938 14.5877 12.6938C13.2877 12.6938 12.1877 13.1438 11.2877 14.0438C10.3877 14.9771 9.9377 16.0771 9.9377 17.3438C9.9377 17.6105 9.95436 17.8771 9.9877 18.1438C10.1544 19.0771 10.5877 19.9105 11.2877 20.6438C11.521 20.8771 11.771 21.0771 12.0377 21.2438C11.771 20.9771 11.5377 20.6605 11.3377 20.2938C11.171 19.8938 11.0377 19.4605 10.9377 18.9938C10.9044 18.7271 10.871 18.4605 10.8377 18.1938C10.8044 17.0605 11.0877 16.1271 11.6877 15.3938C12.421 14.5271 13.4044 13.9771 14.6377 13.7438Z"
            fill="white"
          />
        </svg>
        <svg
          className={`chat-dices__button ${
            attackBuff < 0 ? 'chat-dices__card--selected' : ''
          }`}
          onClick={() => buffHandler('attack', attackBuff - 1)}
          width="25"
          height="41"
          viewBox="0 0 25 41"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M24.7377 4.8938C24.7377 2.22713 23.4044 0.893799 20.7377 0.893799H4.3877C1.72103 0.893799 0.387695 2.22713 0.387695 4.8938V36.8938C0.387695 39.5605 1.72103 40.8938 4.3877 40.8938H20.7377C23.4044 40.8938 24.7377 39.5605 24.7377 36.8938V4.8938ZM17.8877 3.3938L22.3877 7.7438V33.8938L17.8377 38.5438H7.1377L2.8877 34.4938V7.8438L7.0877 3.3938H17.8877ZM10.8877 23.9938L15.4377 22.8938L19.6377 19.1438L5.8877 23.0438L10.8877 23.9938ZM15.1377 33.2938H16.7377C17.9377 32.8271 18.221 31.7271 17.5877 29.9938L13.5377 31.0938C13.871 32.2605 14.4044 32.9938 15.1377 33.2938ZM16.5877 29.1938L16.0877 27.8438L13.5377 28.6438L13.9377 29.8438L16.5877 29.1938ZM15.4377 25.6438L14.8877 24.0438L12.4377 24.5938L12.9377 26.3438L15.4377 25.6438ZM15.9377 27.4438L15.6377 26.0938L13.0877 26.8438L13.5377 28.0938L15.9377 27.4438ZM12.0377 20.4938L10.4877 15.0438L8.7377 14.8938L10.5377 20.7438L12.0377 20.4938ZM11.6377 9.3938L10.7877 13.3938L12.7877 20.0938L14.6877 19.6438L11.6377 9.3938Z"
            fill="black"
          />
          <path
            d="M22.3877 7.7438L17.8877 3.3938H7.0877L2.8877 7.8438V34.4938L7.1377 38.5438H17.8377L22.3877 33.8938V7.7438ZM10.7877 13.3938L11.6377 9.3938L14.6877 19.6438L12.7877 20.0938L10.7877 13.3938ZM10.4877 15.0438L12.0377 20.4938L10.5377 20.7438L8.7377 14.8938L10.4877 15.0438ZM15.6377 26.0938L15.9377 27.4438L13.5377 28.0938L13.0877 26.8438L15.6377 26.0938ZM14.8877 24.0438L15.4377 25.6438L12.9377 26.3438L12.4377 24.5938L14.8877 24.0438ZM16.0877 27.8438L16.5877 29.1938L13.9377 29.8438L13.5377 28.6438L16.0877 27.8438ZM16.7377 33.2938H15.1377C14.4044 32.9938 13.871 32.2605 13.5377 31.0938L17.5877 29.9938C18.221 31.7271 17.9377 32.8271 16.7377 33.2938ZM15.4377 22.8938L10.8877 23.9938L5.8877 23.0438L19.6377 19.1438L15.4377 22.8938Z"
            fill="white"
          />
        </svg>
        <svg
          className={`chat-dices__button ${
            defenceBuff < 0 ? 'chat-dices__card--selected' : ''
          }`}
          onClick={() => buffHandler('defence', defenceBuff - 1)}
          width="26"
          height="41"
          viewBox="0 0 26 41"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M25.2504 4.3501C25.2504 1.68343 23.9171 0.350098 21.2504 0.350098H4.90039C2.23372 0.350098 0.900391 1.68343 0.900391 4.3501V36.3501C0.900391 39.0168 2.23372 40.3501 4.90039 40.3501H21.2504C23.9171 40.3501 25.2504 39.0168 25.2504 36.3501V4.3501ZM18.4004 2.8501L22.9004 7.2001V33.3501L18.3504 38.0001H7.65039L3.40039 33.9501V7.3001L7.60039 2.8501H18.4004ZM11.3504 17.1501L9.45039 19.1501L7.95039 13.4001C6.72175 13.5859 5.75508 13.7192 5.05039 13.8001C4.38372 22.1334 7.11706 28.1501 13.2504 31.8501C14.6557 30.9738 15.6391 30.1905 16.2004 29.5001L15.2004 23.6001L13.7004 25.7501L11.3504 17.1501ZM10.4504 12.7501C10.2068 12.8406 9.9401 12.9239 9.65039 13.0001L10.3004 15.6001L12.1504 13.7001L14.1004 21.9001L16.2004 19.4001L17.6004 27.8501C18.5036 26.6165 19.0203 25.8498 19.1504 25.5501C20.8556 22.3651 21.5223 18.4484 21.1504 13.8001C17.0837 13.3334 14.4504 12.5334 13.2504 11.4001C12.6003 11.9264 11.6669 12.3764 10.4504 12.7501Z"
            fill="black"
          />
          <path
            d="M22.9004 7.2001L18.4004 2.8501H7.60039L3.40039 7.3001V33.9501L7.65039 38.0001H18.3504L22.9004 33.3501V7.2001ZM9.65039 13.0001C9.9401 12.9239 10.2068 12.8406 10.4504 12.7501C11.6669 12.3764 12.6003 11.9264 13.2504 11.4001C14.4504 12.5334 17.0837 13.3334 21.1504 13.8001C21.5223 18.4484 20.8556 22.3651 19.1504 25.5501C19.0203 25.8498 18.5036 26.6165 17.6004 27.8501L16.2004 19.4001L14.1004 21.9001L12.1504 13.7001L10.3004 15.6001L9.65039 13.0001ZM9.45039 19.1501L11.3504 17.1501L13.7004 25.7501L15.2004 23.6001L16.2004 29.5001C15.6391 30.1905 14.6557 30.9738 13.2504 31.8501C7.11706 28.1501 4.38372 22.1334 5.05039 13.8001C5.75508 13.7192 6.72175 13.5859 7.95039 13.4001L9.45039 19.1501Z"
            fill="white"
          />
        </svg>
      </div>
      <div className="chat-dices__row-container chat-dices__row-container--yellow">
        <svg
          onClick={() =>
            handleRoll(
              'defence',
              defenceSelected,
              defenceIndex,
              defenceBuff,
              hitPoints
            )
          }
          className="chat-dices__button chat-dices__button--yellow"
          width="48"
          height="48"
          viewBox="0 0 48 48"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <g clipPath="url(#clip0_937_2004)">
            <path
              d="M41.55 34.85L42.05 33.6V14.7L41.55 13.4L25 3.75L23.35 3.8L7 13.3L6.25 14.6V33.45L7.05 34.85L23.15 44.5L25.1 44.45L41.55 34.85ZM24.3 6.8L29.5 11.8C30.0033 11.9495 30.5366 12.0828 31.1 12.2L25 6.25L39.55 15.15L36.6 16.25C36.6042 16.5803 36.6042 16.897 36.6 17.2L39.75 15.95V32.35L36.5 19.5C36.4732 20.1857 36.4232 20.8523 36.35 21.5L39.25 32.8L30.8 35.4C30.5522 35.7452 30.2855 36.0785 30 36.4L38.95 33.55L24.45 41.8V41.1C24.3342 41.1931 24.2176 41.2764 24.1 41.35C24.0163 41.2996 23.9329 41.2496 23.85 41.2V42.1L9.3 33.45H9.4L17.8 36.25C17.4849 35.9021 17.1849 35.5354 16.9 35.15L9.2 32.55L11.3 21.15C11.1824 20.1685 11.0991 19.1518 11.05 18.1L8.55 32.25V15.35L11.05 16.95C11.0452 16.6581 11.0452 16.3581 11.05 16.05L9.1 14.8L23.5 6.45L16.95 12.1C17.4984 11.9988 18.0151 11.8822 18.5 11.75L24.3 6.8ZM35.45 14C29.597 13.2962 25.8137 12.1462 24.1 10.55C22.0667 12.15 18.1167 13.3 12.25 14C11.2833 26 15.2333 34.6667 24.1 40C32.6298 34.6766 36.4132 26.0099 35.45 14ZM24.1 12.6C25.9467 14.0573 29.1467 15.0406 33.7 15.55C34.4667 25.0833 31.2667 32.4 24.1 37.5C16.9 32.4 13.6833 25.0833 14.45 15.55C19.0099 15.0289 22.2266 14.0456 24.1 12.6ZM32.1 17.35C28.3 16.9167 25.6333 16.1 24.1 14.9V34.35C29.3809 31.0747 32.0475 25.4081 32.1 17.35Z"
              fill="black"
            />
            <path
              d="M29.4998 11.8L24.2998 6.8L18.4998 11.75C18.0149 11.8822 17.4982 11.9988 16.9498 12.1L23.4998 6.45L9.0998 14.8L11.0498 16.05C11.045 16.3581 11.045 16.6581 11.0498 16.95L8.5498 15.35V32.25L11.0498 18.1C11.0989 19.1518 11.1822 20.1685 11.2998 21.15L9.1998 32.55L16.8998 35.15C17.1847 35.5354 17.4847 35.9021 17.7998 36.25L9.3998 33.45H9.2998L23.8498 42.1V41.2C23.9327 41.2496 24.0161 41.2996 24.0998 41.35C24.2174 41.2764 24.3341 41.1931 24.4498 41.1V41.8L38.9498 33.55L29.9998 36.4C30.2854 36.0785 30.552 35.7452 30.7998 35.4L39.2498 32.8L36.3498 21.5C36.423 20.8523 36.473 20.1857 36.4998 19.5L39.7498 32.35V15.95L36.5998 17.2C36.604 16.897 36.604 16.5803 36.5998 16.25L39.5498 15.15L24.9998 6.25L31.0998 12.2C30.5364 12.0828 30.0031 11.9495 29.4998 11.8ZM24.0998 10.55C25.8135 12.1462 29.5968 13.2962 35.4498 14C36.413 26.0099 32.6296 34.6766 24.0998 40C15.2331 34.6667 11.2831 26 12.2498 14C18.1165 13.3 22.0665 12.15 24.0998 10.55ZM33.6998 15.55C29.1466 15.0406 25.9466 14.0573 24.0998 12.6C22.2264 14.0456 19.0097 15.0289 14.4498 15.55C13.6831 25.0833 16.8998 32.4 24.0998 37.5C31.2665 32.4 34.4665 25.0833 33.6998 15.55ZM24.0998 14.9C25.6331 16.1 28.2998 16.9167 32.0998 17.35C32.0473 25.4081 29.3807 31.0747 24.0998 34.35V14.9Z"
              fill="white"
            />
          </g>
          <defs>
            <clipPath id="clip0_937_2004">
              <rect width="48" height="48" fill="white" />
            </clipPath>
          </defs>
        </svg>
        <IndexBox
          index={defenceIndex}
          positiveColor="yellow"
          negativeColor="yellow"
        ></IndexBox>
        <div
          className={`chat-dices__card ${
            defenceSelected === 'armorlight' ? 'chat-dices__card--selected' : ''
          }`}
          dangerouslySetInnerHTML={{ __html: defence.armorlight.icon }}
        ></div>
        <div
          className={`chat-dices__card ${
            defenceSelected === 'armorheavy' ? 'chat-dices__card--selected' : ''
          }`}
          dangerouslySetInnerHTML={{ __html: defence.armorheavy.icon }}
        ></div>
        <div
          className={`chat-dices__card ${
            defenceSelected === 'robe' ? 'chat-dices__card--selected' : ''
          }`}
          dangerouslySetInnerHTML={{ __html: defence.robe.icon }}
        ></div>
        <div className="chat-dices__card"></div>
        <div className="chat-dices__card"></div>
        <IndexBox index={defenceBuff}></IndexBox>
      </div>
      <div className="chat-dices__row-container">
        <div className="chat-dices__heart-button__container">
          <img
            className="chat-dices__heart-button"
            onClick={onClose}
            src={currentHealthIcon}
            width="48"
            height="48"
          ></img>
          <img
            className="chat-dices__heart-button--hover"
            onClick={onClose}
            src={heartHover}
            width="48"
            height="48"
          ></img>
        </div>
        <svg
          className={`chat-dices__button chat-dices__button--blue ${
            isWolf ? 'chat-dices__card--selected' : ''
          }`}
          onClick={() => handleFormSelect('wolf')}
          width="48"
          height="48"
          viewBox="0 0 48 48"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M38.0498 10.7001C34.3165 6.96676 29.7998 5.1001 24.4998 5.1001C19.1998 5.1001 14.6665 6.96676 10.8998 10.7001C7.16647 14.4668 5.2998 19.0001 5.2998 24.3001C5.2998 29.6001 7.16647 34.1168 10.8998 37.8501C14.6665 41.6168 19.1998 43.5001 24.4998 43.5001C29.7998 43.5001 34.3165 41.6168 38.0498 37.8501C41.8165 34.1168 43.6998 29.6001 43.6998 24.3001C43.6998 19.0001 41.8165 14.4668 38.0498 10.7001ZM24.5498 7.9501C29.0498 7.9501 32.8998 9.53343 36.0998 12.7001C39.2998 15.9334 40.8998 19.8001 40.8998 24.3001C40.8998 28.8334 39.2998 32.6834 36.0998 35.8501C32.8998 39.0834 29.0498 40.7001 24.5498 40.7001C20.0165 40.7001 16.1498 39.0834 12.9498 35.8501C9.7498 32.6834 8.1498 28.8334 8.1498 24.3001C8.1498 19.8001 9.7498 15.9334 12.9498 12.7001C16.1498 9.53343 20.0165 7.9501 24.5498 7.9501ZM22.7998 16.2501L21.8498 15.9501L16.0998 12.5001H15.4498L14.8998 14.4501L14.5998 16.7501L15.6998 19.0001L16.0998 21.2001L15.2998 20.9001L14.7498 20.5001V20.1501L14.4498 19.8501L13.5498 20.4001L13.2498 21.5001L14.0998 23.2001L17.1998 25.3501L18.3998 28.9501V31.6001L19.4998 30.3501L18.1998 33.4001L20.5498 31.7501C19.4165 33.6834 18.7331 35.8334 18.4998 38.2001L19.8998 37.5001V39.2501C24.1719 39.825 27.8553 39.375 30.9498 37.9001C33.7903 36.608 36.0403 34.5247 37.6998 31.6501L35.6498 28.2001L38.1498 26.9001V25.8001L36.2998 24.8001L33.9498 23.1501L31.4998 19.3501L28.1998 16.9001L24.4498 15.8001L22.7998 16.2501ZM27.7498 21.4001C25.1498 20.6001 24.0498 19.6501 24.4498 18.5501C24.8831 18.2168 25.4331 18.4834 26.0998 19.3501L27.7498 21.4001Z"
            fill="black"
          />
          <path
            d="M36.0994 12.7002C32.8994 9.53353 29.0494 7.9502 24.5494 7.9502C20.0161 7.9502 16.1494 9.53353 12.9494 12.7002C9.74941 15.9335 8.14941 19.8002 8.14941 24.3002C8.14941 28.8335 9.74941 32.6835 12.9494 35.8502C16.1494 39.0835 20.0161 40.7002 24.5494 40.7002C29.0494 40.7002 32.8994 39.0835 36.0994 35.8502C39.2994 32.6835 40.8994 28.8335 40.8994 24.3002C40.8994 19.8002 39.2994 15.9335 36.0994 12.7002ZM21.8494 15.9502L22.7994 16.2502L24.4494 15.8002L28.1994 16.9002L31.4994 19.3502L33.9494 23.1502L36.2994 24.8002L38.1494 25.8002V26.9002L35.6494 28.2002L37.6994 31.6502C36.0399 34.5248 33.7899 36.6081 30.9494 37.9002C27.8549 39.3751 24.1715 39.8251 19.8994 39.2502V37.5002L18.4994 38.2002C18.7327 35.8335 19.4161 33.6835 20.5494 31.7502L18.1994 33.4002L19.4994 30.3502L18.3994 31.6002V28.9502L17.1994 25.3502L14.0994 23.2002L13.2494 21.5002L13.5494 20.4002L14.4494 19.8502L14.7494 20.1502V20.5002L15.2994 20.9002L16.0994 21.2002L15.6994 19.0002L14.5994 16.7502L14.8994 14.4502L15.4494 12.5002H16.0994L21.8494 15.9502ZM24.4494 18.5502C24.0494 19.6502 25.1494 20.6002 27.7494 21.4002L26.0994 19.3502C25.4327 18.4835 24.8827 18.2169 24.4494 18.5502Z"
            fill="white"
          />
        </svg>
        <svg
          className={`chat-dices__button chat-dices__button--purple ${
            isVampus ? 'chat-dices__card--selected' : ''
          }`}
          onClick={() => handleFormSelect('vampus')}
          width="48"
          height="48"
          viewBox="0 0 48 48"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M38.0498 10.7001C34.3165 6.96676 29.7998 5.1001 24.4998 5.1001C19.1998 5.1001 14.6665 6.96676 10.8998 10.7001C7.16647 14.4668 5.2998 19.0001 5.2998 24.3001C5.2998 29.6001 7.16647 34.1168 10.8998 37.8501C14.6665 41.6168 19.1998 43.5001 24.4998 43.5001C29.7998 43.5001 34.3165 41.6168 38.0498 37.8501C41.8165 34.1168 43.6998 29.6001 43.6998 24.3001C43.6998 19.0001 41.8165 14.4668 38.0498 10.7001ZM24.5498 7.9501C29.0498 7.9501 32.8998 9.53343 36.0998 12.7001C39.2998 15.9334 40.8998 19.8001 40.8998 24.3001C40.8998 28.8334 39.2998 32.6834 36.0998 35.8501C32.8998 39.0834 29.0498 40.7001 24.5498 40.7001C20.0165 40.7001 16.1498 39.0834 12.9498 35.8501C9.7498 32.6834 8.1498 28.8334 8.1498 24.3001C8.1498 19.8001 9.7498 15.9334 12.9498 12.7001C16.1498 9.53343 20.0165 7.9501 24.5498 7.9501ZM28.1998 26.1501C28.0998 25.7834 28.1331 25.4168 28.2998 25.0501C28.0331 25.1501 27.7831 25.3168 27.5498 25.5501C27.3498 25.8501 27.1998 26.1001 27.0998 26.3001L26.0998 26.8501C25.8665 26.7168 25.6165 26.6334 25.3498 26.6001C25.0831 26.5334 24.8165 26.5001 24.5498 26.5001C24.3498 26.5001 24.0831 26.5334 23.7498 26.6001C23.5165 26.6334 23.2998 26.7168 23.0998 26.8501L21.9998 26.3001C21.9665 26.1001 21.8165 25.8501 21.5498 25.5501C21.3498 25.3168 21.1331 25.1501 20.8998 25.0501C21.0665 25.4168 21.0998 25.7834 20.9998 26.1501C20.8998 26.5168 20.9498 27.0501 21.1498 27.7501C21.3165 28.2168 21.5498 28.5001 21.8498 28.6001V29.3501C21.1498 32.8501 20.9665 35.1001 21.2998 36.1001C21.3331 36.1334 21.3498 36.1668 21.3498 36.2001C21.7831 36.9668 22.2165 37.7668 22.6498 38.6001C23.1498 39.3334 23.7831 39.8501 24.5498 40.1501C25.3498 39.8501 25.9831 39.3334 26.4498 38.6001C26.9165 37.8334 27.3498 37.1001 27.7498 36.4001C27.7498 36.3668 27.7665 36.3501 27.7998 36.3501C27.7998 36.2834 27.8165 36.2334 27.8498 36.2001V36.1501C28.1316 35.2114 27.9316 32.9448 27.2498 29.3501V28.6001C27.5831 28.5001 27.8498 28.2168 28.0498 27.7501C28.2498 27.0501 28.2998 26.5168 28.1998 26.1501ZM23.6998 29.9001L23.4498 31.2501L23.0498 29.9001C24.0831 29.3334 25.1331 29.3334 26.1998 29.9001L25.7998 31.2501L25.5498 29.9001C24.9165 29.6001 24.2998 29.6001 23.6998 29.9001ZM16.8498 18.5501C15.3831 16.9501 13.7498 15.5168 11.9498 14.2501C14.0831 17.8834 13.7831 20.5001 11.0498 22.1001C12.6498 23.9668 12.9498 25.9001 11.9498 27.9001C14.1165 28.7334 14.9665 30.4168 14.4998 32.9501C15.7998 31.5168 16.8331 32.2668 17.5998 35.2001C17.9665 34.5668 18.4331 34.2668 18.9998 34.3001C19.3665 34.3668 19.7165 34.5001 20.0498 34.7001C20.3165 34.8001 20.5498 34.9668 20.7498 35.2001C20.6165 34.0334 20.8331 32.0668 21.3998 29.3001C20.9665 29.2334 20.5165 29.0501 20.0498 28.7501C19.8831 28.6168 19.7165 28.4668 19.5498 28.3001C18.9831 27.8334 18.6998 27.0668 18.6998 26.0001C18.7665 25.0668 19.0165 24.3334 19.4498 23.8001C19.5165 23.5668 19.5165 23.3001 19.4498 23.0001C18.7831 21.2334 17.9165 19.7501 16.8498 18.5501ZM37.2998 14.2501C35.4665 15.5168 33.8165 16.9501 32.3498 18.5501C31.2831 19.7501 30.4165 21.2334 29.7498 23.0001C29.6831 23.3001 29.6831 23.5668 29.7498 23.8001C30.1831 24.3334 30.4165 25.0668 30.4498 26.0001C30.4498 27.0668 30.1665 27.8334 29.5998 28.3001C29.0331 28.8668 28.3998 29.2168 27.6998 29.3501C28.2331 32.2168 28.4498 34.2168 28.3498 35.3501C28.7165 34.9168 29.1331 34.6168 29.5998 34.4501C29.7998 34.3834 29.9998 34.3334 30.1998 34.3001C30.7331 34.2668 31.1831 34.5668 31.5498 35.2001C32.3498 32.2668 33.4165 31.5168 34.7498 32.9501C34.2498 30.4168 35.0998 28.7334 37.2998 27.9001C36.2331 25.9001 36.5331 23.9668 38.1998 22.1001C35.4998 20.5001 35.1998 17.8834 37.2998 14.2501Z"
            fill="black"
          />
          <path
            d="M36.0994 12.7002C32.8994 9.53353 29.0494 7.9502 24.5494 7.9502C20.0161 7.9502 16.1494 9.53353 12.9494 12.7002C9.74941 15.9335 8.14941 19.8002 8.14941 24.3002C8.14941 28.8335 9.74941 32.6835 12.9494 35.8502C16.1494 39.0835 20.0161 40.7002 24.5494 40.7002C29.0494 40.7002 32.8994 39.0835 36.0994 35.8502C39.2994 32.6835 40.8994 28.8335 40.8994 24.3002C40.8994 19.8002 39.2994 15.9335 36.0994 12.7002ZM32.3494 18.5502C33.8161 16.9502 35.4661 15.5169 37.2994 14.2502C35.1994 17.8835 35.4994 20.5002 38.1994 22.1002C36.5327 23.9669 36.2327 25.9002 37.2994 27.9002C35.0994 28.7335 34.2494 30.4169 34.7494 32.9502C33.4161 31.5169 32.3494 32.2669 31.5494 35.2002C31.1827 34.5669 30.7327 34.2669 30.1994 34.3002C29.9994 34.3335 29.7994 34.3835 29.5994 34.4502C29.1327 34.6169 28.7161 34.9169 28.3494 35.3502C28.4494 34.2169 28.2327 32.2169 27.6994 29.3502C28.3994 29.2169 29.0327 28.8669 29.5994 28.3002C30.1661 27.8335 30.4494 27.0669 30.4494 26.0002C30.4161 25.0669 30.1827 24.3335 29.7494 23.8002C29.6827 23.5669 29.6827 23.3002 29.7494 23.0002C30.4161 21.2335 31.2827 19.7502 32.3494 18.5502ZM11.9494 14.2502C13.7494 15.5169 15.3827 16.9502 16.8494 18.5502C17.9161 19.7502 18.7827 21.2335 19.4494 23.0002C19.5161 23.3002 19.5161 23.5669 19.4494 23.8002C19.0161 24.3335 18.7661 25.0669 18.6994 26.0002C18.6994 27.0669 18.9827 27.8335 19.5494 28.3002C19.7161 28.4669 19.8827 28.6169 20.0494 28.7502C20.5161 29.0502 20.9661 29.2335 21.3994 29.3002C20.8327 32.0669 20.6161 34.0335 20.7494 35.2002C20.5494 34.9669 20.3161 34.8002 20.0494 34.7002C19.7161 34.5002 19.3661 34.3669 18.9994 34.3002C18.4327 34.2669 17.9661 34.5669 17.5994 35.2002C16.8327 32.2669 15.7994 31.5169 14.4994 32.9502C14.9661 30.4169 14.1161 28.7335 11.9494 27.9002C12.9494 25.9002 12.6494 23.9669 11.0494 22.1002C13.7827 20.5002 14.0827 17.8835 11.9494 14.2502ZM28.2994 25.0502C28.1327 25.4169 28.0994 25.7835 28.1994 26.1502C28.2994 26.5169 28.2494 27.0502 28.0494 27.7502C27.8494 28.2169 27.5827 28.5002 27.2494 28.6002V29.3502C27.9312 32.9449 28.1312 35.2115 27.8494 36.1502V36.2002C27.8161 36.2335 27.7994 36.2835 27.7994 36.3502C27.7661 36.3502 27.7494 36.3669 27.7494 36.4002C27.3494 37.1002 26.9161 37.8335 26.4494 38.6002C25.9827 39.3335 25.3494 39.8502 24.5494 40.1502C23.7827 39.8502 23.1494 39.3335 22.6494 38.6002C22.2161 37.7669 21.7827 36.9669 21.3494 36.2002C21.3494 36.1669 21.3327 36.1335 21.2994 36.1002C20.9661 35.1002 21.1494 32.8502 21.8494 29.3502V28.6002C21.5494 28.5002 21.3161 28.2169 21.1494 27.7502C20.9494 27.0502 20.8994 26.5169 20.9994 26.1502C21.0994 25.7835 21.0661 25.4169 20.8994 25.0502C21.1327 25.1502 21.3494 25.3169 21.5494 25.5502C21.8161 25.8502 21.9661 26.1002 21.9994 26.3002L23.0994 26.8502C23.2994 26.7169 23.5161 26.6335 23.7494 26.6002C24.0827 26.5335 24.3494 26.5002 24.5494 26.5002C24.8161 26.5002 25.0827 26.5335 25.3494 26.6002C25.6161 26.6335 25.8661 26.7169 26.0994 26.8502L27.0994 26.3002C27.1994 26.1002 27.3494 25.8502 27.5494 25.5502C27.7827 25.3169 28.0327 25.1502 28.2994 25.0502ZM23.4494 31.2502L23.6994 29.9002C24.2994 29.6002 24.9161 29.6002 25.5494 29.9002L25.7994 31.2502L26.1994 29.9002C25.1327 29.3335 24.0827 29.3335 23.0494 29.9002L23.4494 31.2502Z"
            fill="white"
          />
        </svg>
      </div>
    </div>
  );
};

export default SkillDices;
