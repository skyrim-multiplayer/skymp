// This file is generated by skyrim-platform/tools/const_enum_extractor

#include "ConstEnumApi.h"

void ConstEnumApi::Register(JsValue& exports,
                            std::shared_ptr<JsEngine> jsEngine)
{
  auto MarkerType = JsValue::Object();
  MarkerType.SetProperty(0, "None");
  MarkerType.SetProperty(1, "City");
  MarkerType.SetProperty(2, "Town");
  MarkerType.SetProperty(3, "Settlement");
  MarkerType.SetProperty(4, "Cave");
  MarkerType.SetProperty(5, "Camp");
  MarkerType.SetProperty(6, "Fort");
  MarkerType.SetProperty(7, "NordicRuins");
  MarkerType.SetProperty(8, "DwemerRuin");
  MarkerType.SetProperty(9, "Shipwreck");
  MarkerType.SetProperty(10, "Grove");
  MarkerType.SetProperty(11, "Landmark");
  MarkerType.SetProperty(12, "DragonLair");
  MarkerType.SetProperty(13, "Farm");
  MarkerType.SetProperty(14, "WoodMill");
  MarkerType.SetProperty(15, "Mine");
  MarkerType.SetProperty(16, "ImperialCamp");
  MarkerType.SetProperty(17, "StormcloakCamp");
  MarkerType.SetProperty(18, "Doomstone");
  MarkerType.SetProperty(19, "WheatMill");
  MarkerType.SetProperty(20, "Smelter");
  MarkerType.SetProperty(21, "Stable");
  MarkerType.SetProperty(22, "ImperialTower");
  MarkerType.SetProperty(23, "Clearing");
  MarkerType.SetProperty(24, "Pass");
  MarkerType.SetProperty(25, "Alter");
  MarkerType.SetProperty(26, "Rock");
  MarkerType.SetProperty(27, "Lighthouse");
  MarkerType.SetProperty(28, "OrcStronghold");
  MarkerType.SetProperty(29, "GiantCamp");
  MarkerType.SetProperty(30, "Shack");
  MarkerType.SetProperty(31, "NordicTower");
  MarkerType.SetProperty(32, "NordicDwelling");
  MarkerType.SetProperty(33, "Docks");
  MarkerType.SetProperty(34, "Shrine");
  MarkerType.SetProperty(35, "RiftenCastle");
  MarkerType.SetProperty(36, "RiftenCapitol");
  MarkerType.SetProperty(37, "WindhelmCastle");
  MarkerType.SetProperty(38, "WindhelmCapitol");
  MarkerType.SetProperty(39, "WhiterunCastle");
  MarkerType.SetProperty(40, "WhiterunCapitol");
  MarkerType.SetProperty(41, "SolitudeCastle");
  MarkerType.SetProperty(42, "SolitudeCapitol");
  MarkerType.SetProperty(43, "MarkarthCastle");
  MarkerType.SetProperty(44, "MarkarthCapitol");
  MarkerType.SetProperty(45, "WinterholdCastle");
  MarkerType.SetProperty(46, "WinterholdCapitol");
  MarkerType.SetProperty(47, "MorthalCastle");
  MarkerType.SetProperty(48, "MorthalCapitol");
  MarkerType.SetProperty(49, "FalkreathCastle");
  MarkerType.SetProperty(50, "FalkreathCapitol");
  MarkerType.SetProperty(51, "DawnstarCastle");
  MarkerType.SetProperty(52, "DawnstarCapitol");
  MarkerType.SetProperty(53, "DLC02_TempleOfMiraak");
  MarkerType.SetProperty(54, "DLC02_RavenRock");
  MarkerType.SetProperty(55, "DLC02_BeastStone");
  MarkerType.SetProperty(56, "DLC02_TelMithryn");
  MarkerType.SetProperty(57, "DLC02_ToSkyrim");
  MarkerType.SetProperty(58, "DLC02_ToSolstheim");
  MarkerType.SetProperty("None", 0);
  MarkerType.SetProperty("City", 1);
  MarkerType.SetProperty("Town", 2);
  MarkerType.SetProperty("Settlement", 3);
  MarkerType.SetProperty("Cave", 4);
  MarkerType.SetProperty("Camp", 5);
  MarkerType.SetProperty("Fort", 6);
  MarkerType.SetProperty("NordicRuins", 7);
  MarkerType.SetProperty("DwemerRuin", 8);
  MarkerType.SetProperty("Shipwreck", 9);
  MarkerType.SetProperty("Grove", 10);
  MarkerType.SetProperty("Landmark", 11);
  MarkerType.SetProperty("DragonLair", 12);
  MarkerType.SetProperty("Farm", 13);
  MarkerType.SetProperty("WoodMill", 14);
  MarkerType.SetProperty("Mine", 15);
  MarkerType.SetProperty("ImperialCamp", 16);
  MarkerType.SetProperty("StormcloakCamp", 17);
  MarkerType.SetProperty("Doomstone", 18);
  MarkerType.SetProperty("WheatMill", 19);
  MarkerType.SetProperty("Smelter", 20);
  MarkerType.SetProperty("Stable", 21);
  MarkerType.SetProperty("ImperialTower", 22);
  MarkerType.SetProperty("Clearing", 23);
  MarkerType.SetProperty("Pass", 24);
  MarkerType.SetProperty("Alter", 25);
  MarkerType.SetProperty("Rock", 26);
  MarkerType.SetProperty("Lighthouse", 27);
  MarkerType.SetProperty("OrcStronghold", 28);
  MarkerType.SetProperty("GiantCamp", 29);
  MarkerType.SetProperty("Shack", 30);
  MarkerType.SetProperty("NordicTower", 31);
  MarkerType.SetProperty("NordicDwelling", 32);
  MarkerType.SetProperty("Docks", 33);
  MarkerType.SetProperty("Shrine", 34);
  MarkerType.SetProperty("RiftenCastle", 35);
  MarkerType.SetProperty("RiftenCapitol", 36);
  MarkerType.SetProperty("WindhelmCastle", 37);
  MarkerType.SetProperty("WindhelmCapitol", 38);
  MarkerType.SetProperty("WhiterunCastle", 39);
  MarkerType.SetProperty("WhiterunCapitol", 40);
  MarkerType.SetProperty("SolitudeCastle", 41);
  MarkerType.SetProperty("SolitudeCapitol", 42);
  MarkerType.SetProperty("MarkarthCastle", 43);
  MarkerType.SetProperty("MarkarthCapitol", 44);
  MarkerType.SetProperty("WinterholdCastle", 45);
  MarkerType.SetProperty("WinterholdCapitol", 46);
  MarkerType.SetProperty("MorthalCastle", 47);
  MarkerType.SetProperty("MorthalCapitol", 48);
  MarkerType.SetProperty("FalkreathCastle", 49);
  MarkerType.SetProperty("FalkreathCapitol", 50);
  MarkerType.SetProperty("DawnstarCastle", 51);
  MarkerType.SetProperty("DawnstarCapitol", 52);
  MarkerType.SetProperty("DLC02_TempleOfMiraak", 53);
  MarkerType.SetProperty("DLC02_RavenRock", 54);
  MarkerType.SetProperty("DLC02_BeastStone", 55);
  MarkerType.SetProperty("DLC02_TelMithryn", 56);
  MarkerType.SetProperty("DLC02_ToSkyrim", 57);
  MarkerType.SetProperty("DLC02_ToSolstheim", 58);
  exports.SetProperty("MarkerType", MarkerType);

  auto ActorValue = JsValue::Object();
  ActorValue.SetProperty(0, "Aggresion");
  ActorValue.SetProperty(1, "Confidence");
  ActorValue.SetProperty(2, "Energy");
  ActorValue.SetProperty(3, "Morality");
  ActorValue.SetProperty(4, "Mood");
  ActorValue.SetProperty(5, "Assistance");
  ActorValue.SetProperty(6, "OneHanded");
  ActorValue.SetProperty(7, "TwoHanded");
  ActorValue.SetProperty(8, "Archery");
  ActorValue.SetProperty(9, "Block");
  ActorValue.SetProperty(10, "Smithing");
  ActorValue.SetProperty(11, "HeavyArmor");
  ActorValue.SetProperty(12, "LightArmor");
  ActorValue.SetProperty(13, "Pickpocket");
  ActorValue.SetProperty(14, "Lockpicking");
  ActorValue.SetProperty(15, "Sneak");
  ActorValue.SetProperty(16, "Alchemy");
  ActorValue.SetProperty(17, "Speech");
  ActorValue.SetProperty(18, "Alteration");
  ActorValue.SetProperty(19, "Conjuration");
  ActorValue.SetProperty(20, "Destruction");
  ActorValue.SetProperty(21, "Illusion");
  ActorValue.SetProperty(22, "Restoration");
  ActorValue.SetProperty(23, "Enchanting");
  ActorValue.SetProperty(24, "Health");
  ActorValue.SetProperty(25, "Magicka");
  ActorValue.SetProperty(26, "Stamina");
  ActorValue.SetProperty(27, "HealRate");
  ActorValue.SetProperty(28, "MagickaRate");
  ActorValue.SetProperty(29, "StaminaRate");
  ActorValue.SetProperty(30, "SpeedMult");
  ActorValue.SetProperty(31, "InventoryWeight");
  ActorValue.SetProperty(32, "CarryWeight");
  ActorValue.SetProperty(33, "CriticalChance");
  ActorValue.SetProperty(34, "MeleeDamage");
  ActorValue.SetProperty(35, "UnarmedDamage");
  ActorValue.SetProperty(36, "Mass");
  ActorValue.SetProperty(37, "VoicePoints");
  ActorValue.SetProperty(38, "VoiceRate");
  ActorValue.SetProperty(39, "DamageResist");
  ActorValue.SetProperty(40, "PoisonResist");
  ActorValue.SetProperty(41, "ResistFire");
  ActorValue.SetProperty(42, "ResistShock");
  ActorValue.SetProperty(43, "ResistFrost");
  ActorValue.SetProperty(44, "ResistMagic");
  ActorValue.SetProperty(45, "ResistDisease");
  ActorValue.SetProperty(46, "Unknown46");
  ActorValue.SetProperty(47, "Unknown47");
  ActorValue.SetProperty(48, "Unknown48");
  ActorValue.SetProperty(49, "Unknown49");
  ActorValue.SetProperty(50, "Unknown50");
  ActorValue.SetProperty(51, "Unknown51");
  ActorValue.SetProperty(52, "Unknown52");
  ActorValue.SetProperty(53, "Paralysis");
  ActorValue.SetProperty(54, "Invisibility");
  ActorValue.SetProperty(55, "NightEye");
  ActorValue.SetProperty(56, "DetectLifeRange");
  ActorValue.SetProperty(57, "WaterBreathing");
  ActorValue.SetProperty(58, "WaterWalking");
  ActorValue.SetProperty(59, "Unknown59");
  ActorValue.SetProperty(60, "Fame");
  ActorValue.SetProperty(61, "Infamy");
  ActorValue.SetProperty(62, "JumpingBonus");
  ActorValue.SetProperty(63, "WardPower");
  ActorValue.SetProperty(64, "RightItemCharge");
  ActorValue.SetProperty(65, "ArmorPerks");
  ActorValue.SetProperty(66, "ShieldPerks");
  ActorValue.SetProperty(67, "WardDeflection");
  ActorValue.SetProperty(68, "Variable01");
  ActorValue.SetProperty(69, "Variable02");
  ActorValue.SetProperty(70, "Variable03");
  ActorValue.SetProperty(71, "Variable04");
  ActorValue.SetProperty(72, "Variable05");
  ActorValue.SetProperty(73, "Variable06");
  ActorValue.SetProperty(74, "Variable07");
  ActorValue.SetProperty(75, "Variable08");
  ActorValue.SetProperty(76, "Variable09");
  ActorValue.SetProperty(77, "Variable10");
  ActorValue.SetProperty(78, "BowSpeedBonus");
  ActorValue.SetProperty(79, "FavorActive");
  ActorValue.SetProperty(80, "FavorsPerDay");
  ActorValue.SetProperty(81, "FavorsPerDayTimer");
  ActorValue.SetProperty(82, "LeftItemCharge");
  ActorValue.SetProperty(83, "AbsorbChance");
  ActorValue.SetProperty(84, "Blindness");
  ActorValue.SetProperty(85, "WeaponSpeedMult");
  ActorValue.SetProperty(86, "ShoutRecoveryMult");
  ActorValue.SetProperty(87, "BowStaggerBonus");
  ActorValue.SetProperty(88, "Telekinesis");
  ActorValue.SetProperty(89, "FavorPointsBonus");
  ActorValue.SetProperty(90, "LastBribedIntimidated");
  ActorValue.SetProperty(91, "LastFlattered");
  ActorValue.SetProperty(92, "MovementNoiseMult");
  ActorValue.SetProperty(93, "BypassVendorStolenCheck");
  ActorValue.SetProperty(94, "BypassVendorKeywordCheck");
  ActorValue.SetProperty(95, "WaitingForPlayer");
  ActorValue.SetProperty(96, "OneHandedModifier");
  ActorValue.SetProperty(97, "TwoHandedModifier");
  ActorValue.SetProperty(98, "MarksmanModifier");
  ActorValue.SetProperty(99, "BlockModifier");
  ActorValue.SetProperty(100, "SmithingModifier");
  ActorValue.SetProperty(101, "HeavyArmorModifier");
  ActorValue.SetProperty(102, "LightArmorModifier");
  ActorValue.SetProperty(103, "PickpocketModifier");
  ActorValue.SetProperty(104, "LockpickingModifier");
  ActorValue.SetProperty(105, "SneakingModifier");
  ActorValue.SetProperty(106, "AlchemyModifier");
  ActorValue.SetProperty(107, "SpeechcraftModifier");
  ActorValue.SetProperty(108, "AlterationModifier");
  ActorValue.SetProperty(109, "ConjurationModifier");
  ActorValue.SetProperty(110, "DestructionModifier");
  ActorValue.SetProperty(111, "IllusionModifier");
  ActorValue.SetProperty(112, "RestorationModifier");
  ActorValue.SetProperty(113, "EnchantingModifier");
  ActorValue.SetProperty(114, "OneHandedSkillAdvance");
  ActorValue.SetProperty(115, "TwoHandedSkillAdvance");
  ActorValue.SetProperty(116, "MarksmanSkillAdvance");
  ActorValue.SetProperty(117, "BlockSkillAdvance");
  ActorValue.SetProperty(118, "SmithingSkillAdvance");
  ActorValue.SetProperty(119, "HeavyArmorSkillAdvance");
  ActorValue.SetProperty(120, "LightArmorSkillAdvance");
  ActorValue.SetProperty(121, "PickpocketSkillAdvance");
  ActorValue.SetProperty(122, "LockpickingSkillAdvance");
  ActorValue.SetProperty(123, "SneakingSkillAdvance");
  ActorValue.SetProperty(124, "AlchemySkillAdvance");
  ActorValue.SetProperty(125, "SpeechcraftSkillAdvance");
  ActorValue.SetProperty(126, "AlterationSkillAdvance");
  ActorValue.SetProperty(127, "ConjurationSkillAdvance");
  ActorValue.SetProperty(128, "DestructionSkillAdvance");
  ActorValue.SetProperty(129, "IllusionSkillAdvance");
  ActorValue.SetProperty(130, "RestorationSkillAdvance");
  ActorValue.SetProperty(131, "EnchantingSkillAdvance");
  ActorValue.SetProperty(132, "LeftWeaponSpeedMultiply");
  ActorValue.SetProperty(133, "DragonSouls");
  ActorValue.SetProperty(134, "CombatHealthRegenMultiply");
  ActorValue.SetProperty(135, "OneHandedPowerModifier");
  ActorValue.SetProperty(136, "TwoHandedPowerModifier");
  ActorValue.SetProperty(137, "MarksmanPowerModifier");
  ActorValue.SetProperty(138, "BlockPowerModifier");
  ActorValue.SetProperty(139, "SmithingPowerModifier");
  ActorValue.SetProperty(140, "HeavyArmorPowerModifier");
  ActorValue.SetProperty(141, "LightArmorPowerModifier");
  ActorValue.SetProperty(142, "PickpocketPowerModifier");
  ActorValue.SetProperty(143, "LockpickingPowerModifier");
  ActorValue.SetProperty(144, "SneakingPowerModifier");
  ActorValue.SetProperty(145, "AlchemyPowerModifier");
  ActorValue.SetProperty(146, "SpeechcraftPowerModifier");
  ActorValue.SetProperty(147, "AlterationPowerModifier");
  ActorValue.SetProperty(148, "ConjurationPowerModifier");
  ActorValue.SetProperty(149, "DestructionPowerModifier");
  ActorValue.SetProperty(150, "IllusionPowerModifier");
  ActorValue.SetProperty(151, "RestorationPowerModifier");
  ActorValue.SetProperty(152, "EnchantingPowerModifier");
  ActorValue.SetProperty(153, "DragonRend");
  ActorValue.SetProperty(154, "AttackDamageMult");
  ActorValue.SetProperty(155, "HealRateMult");
  ActorValue.SetProperty(156, "MagickaRateMult");
  ActorValue.SetProperty(157, "StaminaRateMult");
  ActorValue.SetProperty(158, "WerewolfPerks");
  ActorValue.SetProperty(159, "VampirePerks");
  ActorValue.SetProperty(160, "GrabActorOffset");
  ActorValue.SetProperty(161, "Grabbed");
  ActorValue.SetProperty(162, "Unknown162");
  ActorValue.SetProperty(163, "ReflectDamage");
  ActorValue.SetProperty("Aggresion", 0);
  ActorValue.SetProperty("Confidence", 1);
  ActorValue.SetProperty("Energy", 2);
  ActorValue.SetProperty("Morality", 3);
  ActorValue.SetProperty("Mood", 4);
  ActorValue.SetProperty("Assistance", 5);
  ActorValue.SetProperty("OneHanded", 6);
  ActorValue.SetProperty("TwoHanded", 7);
  ActorValue.SetProperty("Archery", 8);
  ActorValue.SetProperty("Block", 9);
  ActorValue.SetProperty("Smithing", 10);
  ActorValue.SetProperty("HeavyArmor", 11);
  ActorValue.SetProperty("LightArmor", 12);
  ActorValue.SetProperty("Pickpocket", 13);
  ActorValue.SetProperty("Lockpicking", 14);
  ActorValue.SetProperty("Sneak", 15);
  ActorValue.SetProperty("Alchemy", 16);
  ActorValue.SetProperty("Speech", 17);
  ActorValue.SetProperty("Alteration", 18);
  ActorValue.SetProperty("Conjuration", 19);
  ActorValue.SetProperty("Destruction", 20);
  ActorValue.SetProperty("Illusion", 21);
  ActorValue.SetProperty("Restoration", 22);
  ActorValue.SetProperty("Enchanting", 23);
  ActorValue.SetProperty("Health", 24);
  ActorValue.SetProperty("Magicka", 25);
  ActorValue.SetProperty("Stamina", 26);
  ActorValue.SetProperty("HealRate", 27);
  ActorValue.SetProperty("MagickaRate", 28);
  ActorValue.SetProperty("StaminaRate", 29);
  ActorValue.SetProperty("SpeedMult", 30);
  ActorValue.SetProperty("InventoryWeight", 31);
  ActorValue.SetProperty("CarryWeight", 32);
  ActorValue.SetProperty("CriticalChance", 33);
  ActorValue.SetProperty("MeleeDamage", 34);
  ActorValue.SetProperty("UnarmedDamage", 35);
  ActorValue.SetProperty("Mass", 36);
  ActorValue.SetProperty("VoicePoints", 37);
  ActorValue.SetProperty("VoiceRate", 38);
  ActorValue.SetProperty("DamageResist", 39);
  ActorValue.SetProperty("PoisonResist", 40);
  ActorValue.SetProperty("ResistFire", 41);
  ActorValue.SetProperty("ResistShock", 42);
  ActorValue.SetProperty("ResistFrost", 43);
  ActorValue.SetProperty("ResistMagic", 44);
  ActorValue.SetProperty("ResistDisease", 45);
  ActorValue.SetProperty("Unknown46", 46);
  ActorValue.SetProperty("Unknown47", 47);
  ActorValue.SetProperty("Unknown48", 48);
  ActorValue.SetProperty("Unknown49", 49);
  ActorValue.SetProperty("Unknown50", 50);
  ActorValue.SetProperty("Unknown51", 51);
  ActorValue.SetProperty("Unknown52", 52);
  ActorValue.SetProperty("Paralysis", 53);
  ActorValue.SetProperty("Invisibility", 54);
  ActorValue.SetProperty("NightEye", 55);
  ActorValue.SetProperty("DetectLifeRange", 56);
  ActorValue.SetProperty("WaterBreathing", 57);
  ActorValue.SetProperty("WaterWalking", 58);
  ActorValue.SetProperty("Unknown59", 59);
  ActorValue.SetProperty("Fame", 60);
  ActorValue.SetProperty("Infamy", 61);
  ActorValue.SetProperty("JumpingBonus", 62);
  ActorValue.SetProperty("WardPower", 63);
  ActorValue.SetProperty("RightItemCharge", 64);
  ActorValue.SetProperty("ArmorPerks", 65);
  ActorValue.SetProperty("ShieldPerks", 66);
  ActorValue.SetProperty("WardDeflection", 67);
  ActorValue.SetProperty("Variable01", 68);
  ActorValue.SetProperty("Variable02", 69);
  ActorValue.SetProperty("Variable03", 70);
  ActorValue.SetProperty("Variable04", 71);
  ActorValue.SetProperty("Variable05", 72);
  ActorValue.SetProperty("Variable06", 73);
  ActorValue.SetProperty("Variable07", 74);
  ActorValue.SetProperty("Variable08", 75);
  ActorValue.SetProperty("Variable09", 76);
  ActorValue.SetProperty("Variable10", 77);
  ActorValue.SetProperty("BowSpeedBonus", 78);
  ActorValue.SetProperty("FavorActive", 79);
  ActorValue.SetProperty("FavorsPerDay", 80);
  ActorValue.SetProperty("FavorsPerDayTimer", 81);
  ActorValue.SetProperty("LeftItemCharge", 82);
  ActorValue.SetProperty("AbsorbChance", 83);
  ActorValue.SetProperty("Blindness", 84);
  ActorValue.SetProperty("WeaponSpeedMult", 85);
  ActorValue.SetProperty("ShoutRecoveryMult", 86);
  ActorValue.SetProperty("BowStaggerBonus", 87);
  ActorValue.SetProperty("Telekinesis", 88);
  ActorValue.SetProperty("FavorPointsBonus", 89);
  ActorValue.SetProperty("LastBribedIntimidated", 90);
  ActorValue.SetProperty("LastFlattered", 91);
  ActorValue.SetProperty("MovementNoiseMult", 92);
  ActorValue.SetProperty("BypassVendorStolenCheck", 93);
  ActorValue.SetProperty("BypassVendorKeywordCheck", 94);
  ActorValue.SetProperty("WaitingForPlayer", 95);
  ActorValue.SetProperty("OneHandedModifier", 96);
  ActorValue.SetProperty("TwoHandedModifier", 97);
  ActorValue.SetProperty("MarksmanModifier", 98);
  ActorValue.SetProperty("BlockModifier", 99);
  ActorValue.SetProperty("SmithingModifier", 100);
  ActorValue.SetProperty("HeavyArmorModifier", 101);
  ActorValue.SetProperty("LightArmorModifier", 102);
  ActorValue.SetProperty("PickpocketModifier", 103);
  ActorValue.SetProperty("LockpickingModifier", 104);
  ActorValue.SetProperty("SneakingModifier", 105);
  ActorValue.SetProperty("AlchemyModifier", 106);
  ActorValue.SetProperty("SpeechcraftModifier", 107);
  ActorValue.SetProperty("AlterationModifier", 108);
  ActorValue.SetProperty("ConjurationModifier", 109);
  ActorValue.SetProperty("DestructionModifier", 110);
  ActorValue.SetProperty("IllusionModifier", 111);
  ActorValue.SetProperty("RestorationModifier", 112);
  ActorValue.SetProperty("EnchantingModifier", 113);
  ActorValue.SetProperty("OneHandedSkillAdvance", 114);
  ActorValue.SetProperty("TwoHandedSkillAdvance", 115);
  ActorValue.SetProperty("MarksmanSkillAdvance", 116);
  ActorValue.SetProperty("BlockSkillAdvance", 117);
  ActorValue.SetProperty("SmithingSkillAdvance", 118);
  ActorValue.SetProperty("HeavyArmorSkillAdvance", 119);
  ActorValue.SetProperty("LightArmorSkillAdvance", 120);
  ActorValue.SetProperty("PickpocketSkillAdvance", 121);
  ActorValue.SetProperty("LockpickingSkillAdvance", 122);
  ActorValue.SetProperty("SneakingSkillAdvance", 123);
  ActorValue.SetProperty("AlchemySkillAdvance", 124);
  ActorValue.SetProperty("SpeechcraftSkillAdvance", 125);
  ActorValue.SetProperty("AlterationSkillAdvance", 126);
  ActorValue.SetProperty("ConjurationSkillAdvance", 127);
  ActorValue.SetProperty("DestructionSkillAdvance", 128);
  ActorValue.SetProperty("IllusionSkillAdvance", 129);
  ActorValue.SetProperty("RestorationSkillAdvance", 130);
  ActorValue.SetProperty("EnchantingSkillAdvance", 131);
  ActorValue.SetProperty("LeftWeaponSpeedMultiply", 132);
  ActorValue.SetProperty("DragonSouls", 133);
  ActorValue.SetProperty("CombatHealthRegenMultiply", 134);
  ActorValue.SetProperty("OneHandedPowerModifier", 135);
  ActorValue.SetProperty("TwoHandedPowerModifier", 136);
  ActorValue.SetProperty("MarksmanPowerModifier", 137);
  ActorValue.SetProperty("BlockPowerModifier", 138);
  ActorValue.SetProperty("SmithingPowerModifier", 139);
  ActorValue.SetProperty("HeavyArmorPowerModifier", 140);
  ActorValue.SetProperty("LightArmorPowerModifier", 141);
  ActorValue.SetProperty("PickpocketPowerModifier", 142);
  ActorValue.SetProperty("LockpickingPowerModifier", 143);
  ActorValue.SetProperty("SneakingPowerModifier", 144);
  ActorValue.SetProperty("AlchemyPowerModifier", 145);
  ActorValue.SetProperty("SpeechcraftPowerModifier", 146);
  ActorValue.SetProperty("AlterationPowerModifier", 147);
  ActorValue.SetProperty("ConjurationPowerModifier", 148);
  ActorValue.SetProperty("DestructionPowerModifier", 149);
  ActorValue.SetProperty("IllusionPowerModifier", 150);
  ActorValue.SetProperty("RestorationPowerModifier", 151);
  ActorValue.SetProperty("EnchantingPowerModifier", 152);
  ActorValue.SetProperty("DragonRend", 153);
  ActorValue.SetProperty("AttackDamageMult", 154);
  ActorValue.SetProperty("HealRateMult", 155);
  ActorValue.SetProperty("MagickaRateMult", 156);
  ActorValue.SetProperty("StaminaRateMult", 157);
  ActorValue.SetProperty("WerewolfPerks", 158);
  ActorValue.SetProperty("VampirePerks", 159);
  ActorValue.SetProperty("GrabActorOffset", 160);
  ActorValue.SetProperty("Grabbed", 161);
  ActorValue.SetProperty("Unknown162", 162);
  ActorValue.SetProperty("ReflectDamage", 163);
  exports.SetProperty("ActorValue", ActorValue);

  auto SlotType = JsValue::Object();
  SlotType.SetProperty(1, "Left");
  SlotType.SetProperty(2, "Right");
  SlotType.SetProperty(3, "Voice");
  SlotType.SetProperty("Left", 1);
  SlotType.SetProperty("Right", 2);
  SlotType.SetProperty("Voice", 3);
  exports.SetProperty("SlotType", SlotType);

  auto WardHitStatus = JsValue::Object();
  WardHitStatus.SetProperty(0, "Friendly");
  WardHitStatus.SetProperty(1, "Absorbed");
  WardHitStatus.SetProperty(2, "Broken");
  WardHitStatus.SetProperty("Friendly", 0);
  WardHitStatus.SetProperty("Absorbed", 1);
  WardHitStatus.SetProperty("Broken", 2);
  exports.SetProperty("WardHitStatus", WardHitStatus);

  auto PlayerPositionEventType = JsValue::Object();
  PlayerPositionEventType.SetProperty(0, "PreCellTransition");
  PlayerPositionEventType.SetProperty(1, "PreUpdatePackages");
  PlayerPositionEventType.SetProperty(2, "PostUpdatePackages");
  PlayerPositionEventType.SetProperty(3, "PostCellTransition");
  PlayerPositionEventType.SetProperty(4, "CellTransitionFinish");
  PlayerPositionEventType.SetProperty("PreCellTransition", 0);
  PlayerPositionEventType.SetProperty("PreUpdatePackages", 1);
  PlayerPositionEventType.SetProperty("PostUpdatePackages", 2);
  PlayerPositionEventType.SetProperty("PostCellTransition", 3);
  PlayerPositionEventType.SetProperty("CellTransitionFinish", 4);
  exports.SetProperty("PlayerPositionEventType", PlayerPositionEventType);

  auto InputDeviceType = JsValue::Object();
  InputDeviceType.SetProperty(0, "Keyboard");
  InputDeviceType.SetProperty(1, "Mouse");
  InputDeviceType.SetProperty(2, "Gamepad");
  InputDeviceType.SetProperty(3, "VirtualKeyboard");
  InputDeviceType.SetProperty("Keyboard", 0);
  InputDeviceType.SetProperty("Mouse", 1);
  InputDeviceType.SetProperty("Gamepad", 2);
  InputDeviceType.SetProperty("VirtualKeyboard", 3);
  exports.SetProperty("InputDeviceType", InputDeviceType);

  auto MotionType = JsValue::Object();
  MotionType.SetProperty(1, "Dynamic");
  MotionType.SetProperty(2, "SphereInertia");
  MotionType.SetProperty(3, "BoxInertia");
  MotionType.SetProperty(4, "Keyframed");
  MotionType.SetProperty(5, "Fixed");
  MotionType.SetProperty(6, "ThinBoxInertia");
  MotionType.SetProperty(7, "Character");
  MotionType.SetProperty("Dynamic", 1);
  MotionType.SetProperty("SphereInertia", 2);
  MotionType.SetProperty("BoxInertia", 3);
  MotionType.SetProperty("Keyframed", 4);
  MotionType.SetProperty("Fixed", 5);
  MotionType.SetProperty("ThinBoxInertia", 6);
  MotionType.SetProperty("Character", 7);
  exports.SetProperty("MotionType", MotionType);

  auto Menu = JsValue::Object();
  Menu.SetProperty("BarterMenu", "Barter");
  Menu.SetProperty("Book Menu", "Book");
  Menu.SetProperty("Console", "Console");
  Menu.SetProperty("Console Native UI Menu", "ConsoleNativeUI");
  Menu.SetProperty("ContainerMenu", "Container");
  Menu.SetProperty("Crafting Menu", "Crafting");
  Menu.SetProperty("Credits Menu", "Credits");
  Menu.SetProperty("Cursor Menu", "Cursor");
  Menu.SetProperty("Debug Text Menu", "Debug");
  Menu.SetProperty("Dialogue Menu", "Dialogue");
  Menu.SetProperty("Fader Menu", "Fader");
  Menu.SetProperty("FavoritesMenu", "Favorites");
  Menu.SetProperty("GiftMenu", "Gift");
  Menu.SetProperty("HUD Menu", "HUD");
  Menu.SetProperty("InventoryMenu", "Inventory");
  Menu.SetProperty("Journal Menu", "Journal");
  Menu.SetProperty("Kinect Menu", "Kinect");
  Menu.SetProperty("LevelUp Menu", "LevelUp");
  Menu.SetProperty("Loading Menu", "Loading");
  Menu.SetProperty("Main Menu", "Main");
  Menu.SetProperty("Lockpicking Menu", "Lockpicking");
  Menu.SetProperty("MagicMenu", "Magic");
  Menu.SetProperty("MapMenu", "Map");
  Menu.SetProperty("MessageBoxMenu", "MessageBox");
  Menu.SetProperty("Mist Menu", "Mist");
  Menu.SetProperty("Overlay Interaction Menu", "OverlayInteraction");
  Menu.SetProperty("Overlay Menu", "Overlay");
  Menu.SetProperty("Quantity Menu", "Quantity");
  Menu.SetProperty("RaceSex Menu", "RaceSex");
  Menu.SetProperty("Sleep/Wait Menu", "Sleep");
  Menu.SetProperty("StatsMenu", "Stats");
  Menu.SetProperty("TitleSequence Menu", "TitleSequence");
  Menu.SetProperty("Top Menu", "Top");
  Menu.SetProperty("Training Menu", "Training");
  Menu.SetProperty("Tutorial Menu", "Tutorial");
  Menu.SetProperty("TweenMenu", "Tween");
  Menu.SetProperty("Barter", "BarterMenu");
  Menu.SetProperty("Book", "Book Menu");
  Menu.SetProperty("Console", "Console");
  Menu.SetProperty("ConsoleNativeUI", "Console Native UI Menu");
  Menu.SetProperty("Container", "ContainerMenu");
  Menu.SetProperty("Crafting", "Crafting Menu");
  Menu.SetProperty("Credits", "Credits Menu");
  Menu.SetProperty("Cursor", "Cursor Menu");
  Menu.SetProperty("Debug", "Debug Text Menu");
  Menu.SetProperty("Dialogue", "Dialogue Menu");
  Menu.SetProperty("Fader", "Fader Menu");
  Menu.SetProperty("Favorites", "FavoritesMenu");
  Menu.SetProperty("Gift", "GiftMenu");
  Menu.SetProperty("HUD", "HUD Menu");
  Menu.SetProperty("Inventory", "InventoryMenu");
  Menu.SetProperty("Journal", "Journal Menu");
  Menu.SetProperty("Kinect", "Kinect Menu");
  Menu.SetProperty("LevelUp", "LevelUp Menu");
  Menu.SetProperty("Loading", "Loading Menu");
  Menu.SetProperty("Main", "Main Menu");
  Menu.SetProperty("Lockpicking", "Lockpicking Menu");
  Menu.SetProperty("Magic", "MagicMenu");
  Menu.SetProperty("Map", "MapMenu");
  Menu.SetProperty("MessageBox", "MessageBoxMenu");
  Menu.SetProperty("Mist", "Mist Menu");
  Menu.SetProperty("OverlayInteraction", "Overlay Interaction Menu");
  Menu.SetProperty("Overlay", "Overlay Menu");
  Menu.SetProperty("Quantity", "Quantity Menu");
  Menu.SetProperty("RaceSex", "RaceSex Menu");
  Menu.SetProperty("Sleep", "Sleep/Wait Menu");
  Menu.SetProperty("Stats", "StatsMenu");
  Menu.SetProperty("TitleSequence", "TitleSequence Menu");
  Menu.SetProperty("Top", "Top Menu");
  Menu.SetProperty("Training", "Training Menu");
  Menu.SetProperty("Tutorial", "Tutorial Menu");
  Menu.SetProperty("Tween", "TweenMenu");
  exports.SetProperty("Menu", Menu);

  auto DxScanCode = JsValue::Object();
  DxScanCode.SetProperty(0, "None");
  DxScanCode.SetProperty(1, "Escape");
  DxScanCode.SetProperty(2, "N1");
  DxScanCode.SetProperty(3, "N2");
  DxScanCode.SetProperty(4, "N3");
  DxScanCode.SetProperty(5, "N4");
  DxScanCode.SetProperty(6, "N5");
  DxScanCode.SetProperty(7, "N6");
  DxScanCode.SetProperty(8, "N7");
  DxScanCode.SetProperty(9, "N8");
  DxScanCode.SetProperty(10, "N9");
  DxScanCode.SetProperty(11, "N0");
  DxScanCode.SetProperty(12, "Minus");
  DxScanCode.SetProperty(13, "Equals");
  DxScanCode.SetProperty(14, "Backspace");
  DxScanCode.SetProperty(15, "Tab");
  DxScanCode.SetProperty(16, "Q");
  DxScanCode.SetProperty(17, "W");
  DxScanCode.SetProperty(18, "E");
  DxScanCode.SetProperty(19, "R");
  DxScanCode.SetProperty(20, "T");
  DxScanCode.SetProperty(21, "Y");
  DxScanCode.SetProperty(22, "U");
  DxScanCode.SetProperty(23, "I");
  DxScanCode.SetProperty(24, "O");
  DxScanCode.SetProperty(25, "P");
  DxScanCode.SetProperty(26, "LeftBracket");
  DxScanCode.SetProperty(27, "RightBracket");
  DxScanCode.SetProperty(28, "Enter");
  DxScanCode.SetProperty(29, "LeftControl");
  DxScanCode.SetProperty(30, "A");
  DxScanCode.SetProperty(31, "S");
  DxScanCode.SetProperty(32, "D");
  DxScanCode.SetProperty(33, "F");
  DxScanCode.SetProperty(34, "G");
  DxScanCode.SetProperty(35, "H");
  DxScanCode.SetProperty(36, "J");
  DxScanCode.SetProperty(37, "K");
  DxScanCode.SetProperty(38, "L");
  DxScanCode.SetProperty(39, "Semicolon");
  DxScanCode.SetProperty(40, "Apostrophe");
  DxScanCode.SetProperty(41, "Console");
  DxScanCode.SetProperty(42, "LeftShift");
  DxScanCode.SetProperty(43, "BackSlash");
  DxScanCode.SetProperty(44, "Z");
  DxScanCode.SetProperty(45, "X");
  DxScanCode.SetProperty(46, "C");
  DxScanCode.SetProperty(47, "V");
  DxScanCode.SetProperty(48, "B");
  DxScanCode.SetProperty(49, "N");
  DxScanCode.SetProperty(50, "M");
  DxScanCode.SetProperty(51, "Comma");
  DxScanCode.SetProperty(52, "Period");
  DxScanCode.SetProperty(53, "ForwardSlash");
  DxScanCode.SetProperty(54, "RightShift");
  DxScanCode.SetProperty(55, "NumMult");
  DxScanCode.SetProperty(56, "LeftAlt");
  DxScanCode.SetProperty(57, "Spacebar");
  DxScanCode.SetProperty(58, "CapsLock");
  DxScanCode.SetProperty(59, "F1");
  DxScanCode.SetProperty(60, "F2");
  DxScanCode.SetProperty(61, "F3");
  DxScanCode.SetProperty(62, "F4");
  DxScanCode.SetProperty(63, "F5");
  DxScanCode.SetProperty(64, "F6");
  DxScanCode.SetProperty(65, "F7");
  DxScanCode.SetProperty(66, "F8");
  DxScanCode.SetProperty(67, "F9");
  DxScanCode.SetProperty(68, "F10");
  DxScanCode.SetProperty(69, "NumLock");
  DxScanCode.SetProperty(70, "ScrollLock");
  DxScanCode.SetProperty(71, "Num7");
  DxScanCode.SetProperty(72, "Num8");
  DxScanCode.SetProperty(73, "Num9");
  DxScanCode.SetProperty(74, "NumMinus");
  DxScanCode.SetProperty(75, "Num4");
  DxScanCode.SetProperty(76, "Num5");
  DxScanCode.SetProperty(77, "Num6");
  DxScanCode.SetProperty(78, "NumPlus");
  DxScanCode.SetProperty(79, "Num1");
  DxScanCode.SetProperty(80, "Num2");
  DxScanCode.SetProperty(81, "Num3");
  DxScanCode.SetProperty(82, "Num0");
  DxScanCode.SetProperty(83, "NumDot");
  DxScanCode.SetProperty(87, "F11");
  DxScanCode.SetProperty(88, "F12");
  DxScanCode.SetProperty(156, "NumEnter");
  DxScanCode.SetProperty(157, "RightControl");
  DxScanCode.SetProperty(181, "NumSlash");
  DxScanCode.SetProperty(183, "SysRqPtrScr");
  DxScanCode.SetProperty(184, "RightAlt");
  DxScanCode.SetProperty(197, "Pause");
  DxScanCode.SetProperty(199, "Home");
  DxScanCode.SetProperty(200, "UpArrow");
  DxScanCode.SetProperty(201, "PgUp");
  DxScanCode.SetProperty(203, "LeftArrow");
  DxScanCode.SetProperty(205, "RightArrow");
  DxScanCode.SetProperty(207, "End");
  DxScanCode.SetProperty(208, "DownArrow");
  DxScanCode.SetProperty(209, "PgDown");
  DxScanCode.SetProperty(210, "Insert");
  DxScanCode.SetProperty(211, "Delete");
  DxScanCode.SetProperty(256, "LeftMouseButton");
  DxScanCode.SetProperty(257, "RightMouseButton");
  DxScanCode.SetProperty(258, "MiddleMouseButton");
  DxScanCode.SetProperty(259, "MouseButton3");
  DxScanCode.SetProperty(260, "MouseButton4");
  DxScanCode.SetProperty(261, "MouseButton5");
  DxScanCode.SetProperty(262, "MouseButton6");
  DxScanCode.SetProperty(263, "MouseButton7");
  DxScanCode.SetProperty(264, "MouseWheelUp");
  DxScanCode.SetProperty(265, "MouseWheelDown");
  DxScanCode.SetProperty("None", 0);
  DxScanCode.SetProperty("Escape", 1);
  DxScanCode.SetProperty("N1", 2);
  DxScanCode.SetProperty("N2", 3);
  DxScanCode.SetProperty("N3", 4);
  DxScanCode.SetProperty("N4", 5);
  DxScanCode.SetProperty("N5", 6);
  DxScanCode.SetProperty("N6", 7);
  DxScanCode.SetProperty("N7", 8);
  DxScanCode.SetProperty("N8", 9);
  DxScanCode.SetProperty("N9", 10);
  DxScanCode.SetProperty("N0", 11);
  DxScanCode.SetProperty("Minus", 12);
  DxScanCode.SetProperty("Equals", 13);
  DxScanCode.SetProperty("Backspace", 14);
  DxScanCode.SetProperty("Tab", 15);
  DxScanCode.SetProperty("Q", 16);
  DxScanCode.SetProperty("W", 17);
  DxScanCode.SetProperty("E", 18);
  DxScanCode.SetProperty("R", 19);
  DxScanCode.SetProperty("T", 20);
  DxScanCode.SetProperty("Y", 21);
  DxScanCode.SetProperty("U", 22);
  DxScanCode.SetProperty("I", 23);
  DxScanCode.SetProperty("O", 24);
  DxScanCode.SetProperty("P", 25);
  DxScanCode.SetProperty("LeftBracket", 26);
  DxScanCode.SetProperty("RightBracket", 27);
  DxScanCode.SetProperty("Enter", 28);
  DxScanCode.SetProperty("LeftControl", 29);
  DxScanCode.SetProperty("A", 30);
  DxScanCode.SetProperty("S", 31);
  DxScanCode.SetProperty("D", 32);
  DxScanCode.SetProperty("F", 33);
  DxScanCode.SetProperty("G", 34);
  DxScanCode.SetProperty("H", 35);
  DxScanCode.SetProperty("J", 36);
  DxScanCode.SetProperty("K", 37);
  DxScanCode.SetProperty("L", 38);
  DxScanCode.SetProperty("Semicolon", 39);
  DxScanCode.SetProperty("Apostrophe", 40);
  DxScanCode.SetProperty("Console", 41);
  DxScanCode.SetProperty("LeftShift", 42);
  DxScanCode.SetProperty("BackSlash", 43);
  DxScanCode.SetProperty("Z", 44);
  DxScanCode.SetProperty("X", 45);
  DxScanCode.SetProperty("C", 46);
  DxScanCode.SetProperty("V", 47);
  DxScanCode.SetProperty("B", 48);
  DxScanCode.SetProperty("N", 49);
  DxScanCode.SetProperty("M", 50);
  DxScanCode.SetProperty("Comma", 51);
  DxScanCode.SetProperty("Period", 52);
  DxScanCode.SetProperty("ForwardSlash", 53);
  DxScanCode.SetProperty("RightShift", 54);
  DxScanCode.SetProperty("NumMult", 55);
  DxScanCode.SetProperty("LeftAlt", 56);
  DxScanCode.SetProperty("Spacebar", 57);
  DxScanCode.SetProperty("CapsLock", 58);
  DxScanCode.SetProperty("F1", 59);
  DxScanCode.SetProperty("F2", 60);
  DxScanCode.SetProperty("F3", 61);
  DxScanCode.SetProperty("F4", 62);
  DxScanCode.SetProperty("F5", 63);
  DxScanCode.SetProperty("F6", 64);
  DxScanCode.SetProperty("F7", 65);
  DxScanCode.SetProperty("F8", 66);
  DxScanCode.SetProperty("F9", 67);
  DxScanCode.SetProperty("F10", 68);
  DxScanCode.SetProperty("NumLock", 69);
  DxScanCode.SetProperty("ScrollLock", 70);
  DxScanCode.SetProperty("Num7", 71);
  DxScanCode.SetProperty("Num8", 72);
  DxScanCode.SetProperty("Num9", 73);
  DxScanCode.SetProperty("NumMinus", 74);
  DxScanCode.SetProperty("Num4", 75);
  DxScanCode.SetProperty("Num5", 76);
  DxScanCode.SetProperty("Num6", 77);
  DxScanCode.SetProperty("NumPlus", 78);
  DxScanCode.SetProperty("Num1", 79);
  DxScanCode.SetProperty("Num2", 80);
  DxScanCode.SetProperty("Num3", 81);
  DxScanCode.SetProperty("Num0", 82);
  DxScanCode.SetProperty("NumDot", 83);
  DxScanCode.SetProperty("F11", 87);
  DxScanCode.SetProperty("F12", 88);
  DxScanCode.SetProperty("NumEnter", 156);
  DxScanCode.SetProperty("RightControl", 157);
  DxScanCode.SetProperty("NumSlash", 181);
  DxScanCode.SetProperty("SysRqPtrScr", 183);
  DxScanCode.SetProperty("RightAlt", 184);
  DxScanCode.SetProperty("Pause", 197);
  DxScanCode.SetProperty("Home", 199);
  DxScanCode.SetProperty("UpArrow", 200);
  DxScanCode.SetProperty("PgUp", 201);
  DxScanCode.SetProperty("LeftArrow", 203);
  DxScanCode.SetProperty("RightArrow", 205);
  DxScanCode.SetProperty("End", 207);
  DxScanCode.SetProperty("DownArrow", 208);
  DxScanCode.SetProperty("PgDown", 209);
  DxScanCode.SetProperty("Insert", 210);
  DxScanCode.SetProperty("Delete", 211);
  DxScanCode.SetProperty("LeftMouseButton", 256);
  DxScanCode.SetProperty("RightMouseButton", 257);
  DxScanCode.SetProperty("MiddleMouseButton", 258);
  DxScanCode.SetProperty("MouseButton3", 259);
  DxScanCode.SetProperty("MouseButton4", 260);
  DxScanCode.SetProperty("MouseButton5", 261);
  DxScanCode.SetProperty("MouseButton6", 262);
  DxScanCode.SetProperty("MouseButton7", 263);
  DxScanCode.SetProperty("MouseWheelUp", 264);
  DxScanCode.SetProperty("MouseWheelDown", 265);
  exports.SetProperty("DxScanCode", DxScanCode);

  auto FormType = JsValue::Object();
  FormType.SetProperty(83, "ANIO");
  FormType.SetProperty(102, "ARMA");
  FormType.SetProperty(16, "AcousticSpace");
  FormType.SetProperty(6, "Action");
  FormType.SetProperty(24, "Activator");
  FormType.SetProperty(95, "ActorValueInfo");
  FormType.SetProperty(94, "AddonNode");
  FormType.SetProperty(42, "Ammo");
  FormType.SetProperty(33, "Apparatus");
  FormType.SetProperty(26, "Armor");
  FormType.SetProperty(64, "ArrowProjectile");
  FormType.SetProperty(125, "Art");
  FormType.SetProperty(123, "AssociationType");
  FormType.SetProperty(69, "BarrierProjectile");
  FormType.SetProperty(66, "BeamProjectile");
  FormType.SetProperty(93, "BodyPartData");
  FormType.SetProperty(27, "Book");
  FormType.SetProperty(97, "CameraPath");
  FormType.SetProperty(96, "CameraShot");
  FormType.SetProperty(60, "Cell");
  FormType.SetProperty(62, "Character");
  FormType.SetProperty(10, "Class");
  FormType.SetProperty(55, "Climate");
  FormType.SetProperty(132, "CollisionLayer");
  FormType.SetProperty(133, "ColorForm");
  FormType.SetProperty(80, "CombatStyle");
  FormType.SetProperty(68, "ConeProjectile");
  FormType.SetProperty(49, "ConstructibleObject");
  FormType.SetProperty(28, "Container");
  FormType.SetProperty(117, "DLVW");
  FormType.SetProperty(88, "Debris");
  FormType.SetProperty(107, "DefaultObject");
  FormType.SetProperty(115, "DialogueBranch");
  FormType.SetProperty(29, "Door");
  FormType.SetProperty(129, "DualCastData");
  FormType.SetProperty(18, "EffectSetting");
  FormType.SetProperty(85, "EffectShader");
  FormType.SetProperty(21, "Enchantment");
  FormType.SetProperty(103, "EncounterZone");
  FormType.SetProperty(120, "EquipSlot");
  FormType.SetProperty(87, "Explosion");
  FormType.SetProperty(13, "Eyes");
  FormType.SetProperty(11, "Faction");
  FormType.SetProperty(67, "FlameProjectile");
  FormType.SetProperty(39, "Flora");
  FormType.SetProperty(110, "Footstep");
  FormType.SetProperty(111, "FootstepSet");
  FormType.SetProperty(40, "Furniture");
  FormType.SetProperty(3, "GMST");
  FormType.SetProperty(9, "Global");
  FormType.SetProperty(37, "Grass");
  FormType.SetProperty(65, "GrenadeProjectile");
  FormType.SetProperty(2, "Group");
  FormType.SetProperty(51, "Hazard");
  FormType.SetProperty(12, "HeadPart");
  FormType.SetProperty(78, "Idle");
  FormType.SetProperty(47, "IdleMarker");
  FormType.SetProperty(89, "ImageSpace");
  FormType.SetProperty(90, "ImageSpaceModifier");
  FormType.SetProperty(100, "ImpactData");
  FormType.SetProperty(101, "ImpactDataSet");
  FormType.SetProperty(30, "Ingredient");
  FormType.SetProperty(45, "Key");
  FormType.SetProperty(4, "Keyword");
  FormType.SetProperty(72, "Land");
  FormType.SetProperty(20, "LandTexture");
  FormType.SetProperty(44, "LeveledCharacter");
  FormType.SetProperty(53, "LeveledItem");
  FormType.SetProperty(82, "LeveledSpell");
  FormType.SetProperty(31, "Light");
  FormType.SetProperty(108, "LightingTemplate");
  FormType.SetProperty(91, "List");
  FormType.SetProperty(81, "LoadScreen");
  FormType.SetProperty(104, "Location");
  FormType.SetProperty(5, "LocationRef");
  FormType.SetProperty(126, "Material");
  FormType.SetProperty(99, "MaterialType");
  FormType.SetProperty(8, "MenuIcon");
  FormType.SetProperty(105, "Message");
  FormType.SetProperty(32, "Misc");
  FormType.SetProperty(63, "MissileProjectile");
  FormType.SetProperty(36, "MovableStatic");
  FormType.SetProperty(127, "MovementType");
  FormType.SetProperty(116, "MusicTrack");
  FormType.SetProperty(109, "MusicType");
  FormType.SetProperty(59, "NAVI");
  FormType.SetProperty(43, "NPC");
  FormType.SetProperty(73, "NavMesh");
  FormType.SetProperty(0, "None");
  FormType.SetProperty(48, "Note");
  FormType.SetProperty(124, "Outfit");
  FormType.SetProperty(70, "PHZD");
  FormType.SetProperty(79, "Package");
  FormType.SetProperty(92, "Perk");
  FormType.SetProperty(46, "Potion");
  FormType.SetProperty(50, "Projectile");
  FormType.SetProperty(77, "Quest");
  FormType.SetProperty(14, "Race");
  FormType.SetProperty(106, "Ragdoll");
  FormType.SetProperty(61, "Reference");
  FormType.SetProperty(57, "ReferenceEffect");
  FormType.SetProperty(58, "Region");
  FormType.SetProperty(121, "Relationship");
  FormType.SetProperty(134, "ReverbParam");
  FormType.SetProperty(122, "Scene");
  FormType.SetProperty(19, "Script");
  FormType.SetProperty(23, "ScrollItem");
  FormType.SetProperty(56, "ShaderParticleGeometryData");
  FormType.SetProperty(119, "Shout");
  FormType.SetProperty(17, "Skill");
  FormType.SetProperty(52, "SoulGem");
  FormType.SetProperty(15, "Sound");
  FormType.SetProperty(130, "SoundCategory");
  FormType.SetProperty(128, "SoundDescriptor");
  FormType.SetProperty(131, "SoundOutput");
  FormType.SetProperty(22, "Spell");
  FormType.SetProperty(34, "Static");
  FormType.SetProperty(35, "StaticCollection");
  FormType.SetProperty(112, "StoryBranchNode");
  FormType.SetProperty(114, "StoryEventNode");
  FormType.SetProperty(113, "StoryQuestNode");
  FormType.SetProperty(1, "TES4");
  FormType.SetProperty(74, "TLOD");
  FormType.SetProperty(86, "TOFT");
  FormType.SetProperty(25, "TalkingActivator");
  FormType.SetProperty(7, "TextureSet");
  FormType.SetProperty(75, "Topic");
  FormType.SetProperty(76, "TopicInfo");
  FormType.SetProperty(38, "Tree");
  FormType.SetProperty(98, "VoiceType");
  FormType.SetProperty(84, "Water");
  FormType.SetProperty(41, "Weapon");
  FormType.SetProperty(54, "Weather");
  FormType.SetProperty(118, "WordOfPower");
  FormType.SetProperty(71, "WorldSpace");
  FormType.SetProperty("ANIO", 83);
  FormType.SetProperty("ARMA", 102);
  FormType.SetProperty("AcousticSpace", 16);
  FormType.SetProperty("Action", 6);
  FormType.SetProperty("Activator", 24);
  FormType.SetProperty("ActorValueInfo", 95);
  FormType.SetProperty("AddonNode", 94);
  FormType.SetProperty("Ammo", 42);
  FormType.SetProperty("Apparatus", 33);
  FormType.SetProperty("Armor", 26);
  FormType.SetProperty("ArrowProjectile", 64);
  FormType.SetProperty("Art", 125);
  FormType.SetProperty("AssociationType", 123);
  FormType.SetProperty("BarrierProjectile", 69);
  FormType.SetProperty("BeamProjectile", 66);
  FormType.SetProperty("BodyPartData", 93);
  FormType.SetProperty("Book", 27);
  FormType.SetProperty("CameraPath", 97);
  FormType.SetProperty("CameraShot", 96);
  FormType.SetProperty("Cell", 60);
  FormType.SetProperty("Character", 62);
  FormType.SetProperty("Class", 10);
  FormType.SetProperty("Climate", 55);
  FormType.SetProperty("CollisionLayer", 132);
  FormType.SetProperty("ColorForm", 133);
  FormType.SetProperty("CombatStyle", 80);
  FormType.SetProperty("ConeProjectile", 68);
  FormType.SetProperty("ConstructibleObject", 49);
  FormType.SetProperty("Container", 28);
  FormType.SetProperty("DLVW", 117);
  FormType.SetProperty("Debris", 88);
  FormType.SetProperty("DefaultObject", 107);
  FormType.SetProperty("DialogueBranch", 115);
  FormType.SetProperty("Door", 29);
  FormType.SetProperty("DualCastData", 129);
  FormType.SetProperty("EffectSetting", 18);
  FormType.SetProperty("EffectShader", 85);
  FormType.SetProperty("Enchantment", 21);
  FormType.SetProperty("EncounterZone", 103);
  FormType.SetProperty("EquipSlot", 120);
  FormType.SetProperty("Explosion", 87);
  FormType.SetProperty("Eyes", 13);
  FormType.SetProperty("Faction", 11);
  FormType.SetProperty("FlameProjectile", 67);
  FormType.SetProperty("Flora", 39);
  FormType.SetProperty("Footstep", 110);
  FormType.SetProperty("FootstepSet", 111);
  FormType.SetProperty("Furniture", 40);
  FormType.SetProperty("GMST", 3);
  FormType.SetProperty("Global", 9);
  FormType.SetProperty("Grass", 37);
  FormType.SetProperty("GrenadeProjectile", 65);
  FormType.SetProperty("Group", 2);
  FormType.SetProperty("Hazard", 51);
  FormType.SetProperty("HeadPart", 12);
  FormType.SetProperty("Idle", 78);
  FormType.SetProperty("IdleMarker", 47);
  FormType.SetProperty("ImageSpace", 89);
  FormType.SetProperty("ImageSpaceModifier", 90);
  FormType.SetProperty("ImpactData", 100);
  FormType.SetProperty("ImpactDataSet", 101);
  FormType.SetProperty("Ingredient", 30);
  FormType.SetProperty("Key", 45);
  FormType.SetProperty("Keyword", 4);
  FormType.SetProperty("Land", 72);
  FormType.SetProperty("LandTexture", 20);
  FormType.SetProperty("LeveledCharacter", 44);
  FormType.SetProperty("LeveledItem", 53);
  FormType.SetProperty("LeveledSpell", 82);
  FormType.SetProperty("Light", 31);
  FormType.SetProperty("LightingTemplate", 108);
  FormType.SetProperty("List", 91);
  FormType.SetProperty("LoadScreen", 81);
  FormType.SetProperty("Location", 104);
  FormType.SetProperty("LocationRef", 5);
  FormType.SetProperty("Material", 126);
  FormType.SetProperty("MaterialType", 99);
  FormType.SetProperty("MenuIcon", 8);
  FormType.SetProperty("Message", 105);
  FormType.SetProperty("Misc", 32);
  FormType.SetProperty("MissileProjectile", 63);
  FormType.SetProperty("MovableStatic", 36);
  FormType.SetProperty("MovementType", 127);
  FormType.SetProperty("MusicTrack", 116);
  FormType.SetProperty("MusicType", 109);
  FormType.SetProperty("NAVI", 59);
  FormType.SetProperty("NPC", 43);
  FormType.SetProperty("NavMesh", 73);
  FormType.SetProperty("None", 0);
  FormType.SetProperty("Note", 48);
  FormType.SetProperty("Outfit", 124);
  FormType.SetProperty("PHZD", 70);
  FormType.SetProperty("Package", 79);
  FormType.SetProperty("Perk", 92);
  FormType.SetProperty("Potion", 46);
  FormType.SetProperty("Projectile", 50);
  FormType.SetProperty("Quest", 77);
  FormType.SetProperty("Race", 14);
  FormType.SetProperty("Ragdoll", 106);
  FormType.SetProperty("Reference", 61);
  FormType.SetProperty("ReferenceEffect", 57);
  FormType.SetProperty("Region", 58);
  FormType.SetProperty("Relationship", 121);
  FormType.SetProperty("ReverbParam", 134);
  FormType.SetProperty("Scene", 122);
  FormType.SetProperty("Script", 19);
  FormType.SetProperty("ScrollItem", 23);
  FormType.SetProperty("ShaderParticleGeometryData", 56);
  FormType.SetProperty("Shout", 119);
  FormType.SetProperty("Skill", 17);
  FormType.SetProperty("SoulGem", 52);
  FormType.SetProperty("Sound", 15);
  FormType.SetProperty("SoundCategory", 130);
  FormType.SetProperty("SoundDescriptor", 128);
  FormType.SetProperty("SoundOutput", 131);
  FormType.SetProperty("Spell", 22);
  FormType.SetProperty("Static", 34);
  FormType.SetProperty("StaticCollection", 35);
  FormType.SetProperty("StoryBranchNode", 112);
  FormType.SetProperty("StoryEventNode", 114);
  FormType.SetProperty("StoryQuestNode", 113);
  FormType.SetProperty("TES4", 1);
  FormType.SetProperty("TLOD", 74);
  FormType.SetProperty("TOFT", 86);
  FormType.SetProperty("TalkingActivator", 25);
  FormType.SetProperty("TextureSet", 7);
  FormType.SetProperty("Topic", 75);
  FormType.SetProperty("TopicInfo", 76);
  FormType.SetProperty("Tree", 38);
  FormType.SetProperty("VoiceType", 98);
  FormType.SetProperty("Water", 84);
  FormType.SetProperty("Weapon", 41);
  FormType.SetProperty("Weather", 54);
  FormType.SetProperty("WordOfPower", 118);
  FormType.SetProperty("WorldSpace", 71);
  exports.SetProperty("FormType", FormType);

  auto WeaponType = JsValue::Object();
  WeaponType.SetProperty(0, "Fist");
  WeaponType.SetProperty(1, "Sword");
  WeaponType.SetProperty(2, "Dagger");
  WeaponType.SetProperty(3, "WarAxe");
  WeaponType.SetProperty(4, "Mace");
  WeaponType.SetProperty(5, "Greatsword");
  WeaponType.SetProperty(6, "Battleaxe");
  WeaponType.SetProperty(6, "Warhammer");
  WeaponType.SetProperty(7, "Bow");
  WeaponType.SetProperty(8, "Staff");
  WeaponType.SetProperty(9, "Crossbow");
  WeaponType.SetProperty("Fist", 0);
  WeaponType.SetProperty("Sword", 1);
  WeaponType.SetProperty("Dagger", 2);
  WeaponType.SetProperty("WarAxe", 3);
  WeaponType.SetProperty("Mace", 4);
  WeaponType.SetProperty("Greatsword", 5);
  WeaponType.SetProperty("Battleaxe", 6);
  WeaponType.SetProperty("Warhammer", 6);
  WeaponType.SetProperty("Bow", 7);
  WeaponType.SetProperty("Staff", 8);
  WeaponType.SetProperty("Crossbow", 9);
  exports.SetProperty("WeaponType", WeaponType);

  auto EquippedItemType = JsValue::Object();
  EquippedItemType.SetProperty(0, "Fist");
  EquippedItemType.SetProperty(1, "Sword");
  EquippedItemType.SetProperty(2, "Dagger");
  EquippedItemType.SetProperty(3, "WarAxe");
  EquippedItemType.SetProperty(4, "Mace");
  EquippedItemType.SetProperty(5, "Greatsword");
  EquippedItemType.SetProperty(6, "Battleaxe");
  EquippedItemType.SetProperty(6, "Warhammer");
  EquippedItemType.SetProperty(7, "Bow");
  EquippedItemType.SetProperty(8, "Staff");
  EquippedItemType.SetProperty(9, "Spell");
  EquippedItemType.SetProperty(10, "Shield");
  EquippedItemType.SetProperty(11, "Torch");
  EquippedItemType.SetProperty(12, "Crossbow");
  EquippedItemType.SetProperty("Fist", 0);
  EquippedItemType.SetProperty("Sword", 1);
  EquippedItemType.SetProperty("Dagger", 2);
  EquippedItemType.SetProperty("WarAxe", 3);
  EquippedItemType.SetProperty("Mace", 4);
  EquippedItemType.SetProperty("Greatsword", 5);
  EquippedItemType.SetProperty("Battleaxe", 6);
  EquippedItemType.SetProperty("Warhammer", 6);
  EquippedItemType.SetProperty("Bow", 7);
  EquippedItemType.SetProperty("Staff", 8);
  EquippedItemType.SetProperty("Spell", 9);
  EquippedItemType.SetProperty("Shield", 10);
  EquippedItemType.SetProperty("Torch", 11);
  EquippedItemType.SetProperty("Crossbow", 12);
  exports.SetProperty("EquippedItemType", EquippedItemType);

  auto SlotMask = JsValue::Object();
  SlotMask.SetProperty(1, "Head");
  SlotMask.SetProperty(2, "Hair");
  SlotMask.SetProperty(4, "Body");
  SlotMask.SetProperty(8, "Hands");
  SlotMask.SetProperty(16, "Forearms");
  SlotMask.SetProperty(32, "Amulet");
  SlotMask.SetProperty(64, "Ring");
  SlotMask.SetProperty(128, "Feet");
  SlotMask.SetProperty(256, "Calves");
  SlotMask.SetProperty(512, "Shield");
  SlotMask.SetProperty(1024, "Tail");
  SlotMask.SetProperty(2048, "LongHair");
  SlotMask.SetProperty(4096, "Circlet");
  SlotMask.SetProperty(8192, "Ears");
  SlotMask.SetProperty(16384, "Face");
  SlotMask.SetProperty(16384, "Mouth");
  SlotMask.SetProperty(32768, "Neck");
  SlotMask.SetProperty(65536, "ChestOuter");
  SlotMask.SetProperty(65536, "ChestPrimary");
  SlotMask.SetProperty(131072, "Back");
  SlotMask.SetProperty(262144, "Misc01");
  SlotMask.SetProperty(524288, "PelvisOuter");
  SlotMask.SetProperty(524288, "PelvisPrimary");
  SlotMask.SetProperty(1048576, "DecapitateHead");
  SlotMask.SetProperty(2097152, "Decapitate");
  SlotMask.SetProperty(4194304, "PelvisUnder");
  SlotMask.SetProperty(4194304, "PelvisSecondary");
  SlotMask.SetProperty(8388608, "LegOuter");
  SlotMask.SetProperty(8388608, "LegPrimary");
  SlotMask.SetProperty(16777216, "LegUnder");
  SlotMask.SetProperty(16777216, "LegSecondary");
  SlotMask.SetProperty(33554432, "FaceAlt");
  SlotMask.SetProperty(33554432, "Jewelry");
  SlotMask.SetProperty(67108864, "ChestUnder");
  SlotMask.SetProperty(67108864, "ChestSecondary");
  SlotMask.SetProperty(134217728, "Shoulder");
  SlotMask.SetProperty(268435456, "ArmUnder");
  SlotMask.SetProperty(268435456, "ArmSecondary");
  SlotMask.SetProperty(268435456, "ArmLeft");
  SlotMask.SetProperty(536870912, "ArmOuter");
  SlotMask.SetProperty(536870912, "ArmPrimary");
  SlotMask.SetProperty(536870912, "ArmRight");
  SlotMask.SetProperty(1073741824, "Misc02");
  SlotMask.SetProperty(jsEngine->RunScript("2147483648", "_.js"), "FX01");
  SlotMask.SetProperty("Head", 1);
  SlotMask.SetProperty("Hair", 2);
  SlotMask.SetProperty("Body", 4);
  SlotMask.SetProperty("Hands", 8);
  SlotMask.SetProperty("Forearms", 16);
  SlotMask.SetProperty("Amulet", 32);
  SlotMask.SetProperty("Ring", 64);
  SlotMask.SetProperty("Feet", 128);
  SlotMask.SetProperty("Calves", 256);
  SlotMask.SetProperty("Shield", 512);
  SlotMask.SetProperty("Tail", 1024);
  SlotMask.SetProperty("LongHair", 2048);
  SlotMask.SetProperty("Circlet", 4096);
  SlotMask.SetProperty("Ears", 8192);
  SlotMask.SetProperty("Face", 16384);
  SlotMask.SetProperty("Mouth", 16384);
  SlotMask.SetProperty("Neck", 32768);
  SlotMask.SetProperty("ChestOuter", 65536);
  SlotMask.SetProperty("ChestPrimary", 65536);
  SlotMask.SetProperty("Back", 131072);
  SlotMask.SetProperty("Misc01", 262144);
  SlotMask.SetProperty("PelvisOuter", 524288);
  SlotMask.SetProperty("PelvisPrimary", 524288);
  SlotMask.SetProperty("DecapitateHead", 1048576);
  SlotMask.SetProperty("Decapitate", 2097152);
  SlotMask.SetProperty("PelvisUnder", 4194304);
  SlotMask.SetProperty("PelvisSecondary", 4194304);
  SlotMask.SetProperty("LegOuter", 8388608);
  SlotMask.SetProperty("LegPrimary", 8388608);
  SlotMask.SetProperty("LegUnder", 16777216);
  SlotMask.SetProperty("LegSecondary", 16777216);
  SlotMask.SetProperty("FaceAlt", 33554432);
  SlotMask.SetProperty("Jewelry", 33554432);
  SlotMask.SetProperty("ChestUnder", 67108864);
  SlotMask.SetProperty("ChestSecondary", 67108864);
  SlotMask.SetProperty("Shoulder", 134217728);
  SlotMask.SetProperty("ArmUnder", 268435456);
  SlotMask.SetProperty("ArmSecondary", 268435456);
  SlotMask.SetProperty("ArmLeft", 268435456);
  SlotMask.SetProperty("ArmOuter", 536870912);
  SlotMask.SetProperty("ArmPrimary", 536870912);
  SlotMask.SetProperty("ArmRight", 536870912);
  SlotMask.SetProperty("Misc02", 1073741824);
  SlotMask.SetProperty("FX01", jsEngine->RunScript("2147483648", "_.js"));
  exports.SetProperty("SlotMask", SlotMask);

  auto SpriteEffects = JsValue::Object();
  SpriteEffects.SetProperty(0, "None");
  SpriteEffects.SetProperty(1, "FlipHorizontally");
  SpriteEffects.SetProperty(2, "FlipVertically");
  SpriteEffects.SetProperty("None", 0);
  SpriteEffects.SetProperty("FlipHorizontally", 1);
  SpriteEffects.SetProperty("FlipVertically", 2);
  exports.SetProperty("SpriteEffects", SpriteEffects);
}
