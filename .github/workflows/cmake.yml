name: CMake

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  VCPKG_BINARY_SOURCES: 'clear;nuget,GitHub,readwrite'
  VCPKG_FEATURE_FLAGS: 'manifests'

jobs:
  build:
    runs-on: windows-2019

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 1
        submodules: 'true'

    - run: ./vcpkg/bootstrap-vcpkg.bat

    - name: 'Setup NuGet Credentials'
      shell: 'bash'
      # Replace <OWNER> with your organization name
      run: >
        `./vcpkg/vcpkg fetch nuget | tail -n 1`
        sources add
        -source "https://nuget.pkg.github.com/skyrim-multiplayer/index.json"
        -storepasswordincleartext
        -name "GitHub"
        -username "skyrim-multiplayer"
        -password "${{ secrets.GITHUB_TOKEN }}"

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{env.BUILD_TYPE}} --verbose # --output-on-failure
